<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Moody&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.liqian.fun/"/>
  <updated>2020-02-23T10:38:27.950Z</updated>
  <id>https://blog.liqian.fun/</id>
  
  <author>
    <name>Moody</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>lambda学习笔记</title>
    <link href="https://blog.liqian.fun/2020/02/23/lambda%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.liqian.fun/2020/02/23/lambda%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-23T10:37:00.000Z</published>
    <updated>2020-02-23T10:38:27.950Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Lambda表达式概述"><a href="#Lambda表达式概述" class="headerlink" title="Lambda表达式概述"></a>Lambda表达式概述</h2><h3 id="什么是Lambda"><a href="#什么是Lambda" class="headerlink" title="什么是Lambda"></a>什么是Lambda</h3><ul><li>Lambda表达式也被称为箭头函数，匿名函数，闭bao。</li><li>Lambda表达式体现的是轻量级函数式编程思想。</li><li>‘-&gt;’符号式Lambda表达式核心操作符号，符号左侧是操作参数，符号右侧是操作表达式。</li><li>Lambda表达式是<strong>JDK8新特性</strong>，可以运行在jdk8及以上的运行环境。</li></ul><h3 id="Model-Code-as-Data"><a href="#Model-Code-as-Data" class="headerlink" title="Model Code as Data"></a>Model Code as Data</h3><ul><li>Model Code as Data,编码及数据，尽可能轻量级的将代码封装为数据。</li><li>解决方案：接口&amp;实现类（匿名内部类）</li><li>存在问题：语法亢余，this关键字，变量捕获，数据控制等。</li></ul><h3 id="项目问题：功能接口的设计与优化"><a href="#项目问题：功能接口的设计与优化" class="headerlink" title="项目问题：功能接口的设计与优化"></a>项目问题：功能接口的设计与优化</h3><ul><li>需求环境：线程类的创建</li><li>解决方案：匿名内部类实现</li></ul><h4 id="项目实践"><a href="#项目实践" class="headerlink" title="项目实践"></a>项目实践</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传统模式下创建新线程</span></span><br><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println( <span class="string">"Threading...."</span>+Thread.currentThread().getId() );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;).start();</span><br><span class="line"><span class="comment">//JDK8新特性，lambda表达式，优化线程模式</span></span><br><span class="line"><span class="keyword">new</span> Thread(()-&gt;System.out.println(<span class="string">"Lambda Threading...."</span>+Thread.currentThread().getId())).start();</span><br></pre></td></tr></table></figure><h3 id="为什么使用Lambda表达式"><a href="#为什么使用Lambda表达式" class="headerlink" title="为什么使用Lambda表达式"></a>为什么使用Lambda表达式</h3><ul><li>它不是解决未知问题的新技术。</li><li>对现有解决方案的语义化优化。</li><li>需要根据实际需求考虑性能问题。</li></ul><h2 id="Lambda表达式基本语法"><a href="#Lambda表达式基本语法" class="headerlink" title="Lambda表达式基本语法"></a>Lambda表达式基本语法</h2><h3 id="函数式接口-function-interface"><a href="#函数式接口-function-interface" class="headerlink" title="函数式接口(function interface)"></a>函数式接口(function interface)</h3><ul><li>函数式接口，就是java类型系统中的接口。</li><li>函数式接口，是只包含一个接口方法的特殊接口，。</li><li>语义化检测注解：@Functionallnterface</li></ul><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author:liqian</span></span><br><span class="line"><span class="comment"> * Date:2020/2/23</span></span><br><span class="line"><span class="comment"> * Desc: 用户身份认证接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span> <span class="comment">//只能提供一个未实现接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserAuth</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过账号，验证用户身份信息接口</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username 要验证的用户账号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回身份信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">vertifyUser</span><span class="params">(String username)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Author:liqian</span></span><br><span class="line"><span class="comment"> * Date:2020/2/23</span></span><br><span class="line"><span class="comment"> * Desc:消息传输格式化接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserMessage</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消息转化方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message 要转换的消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> format 转换的格式（xml，json。。）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回转换的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">format</span><span class="params">(String message,String format)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="使用规则"><a href="#使用规则" class="headerlink" title="使用规则"></a>使用规则</h4><ul><li>默认方法</li><li>静态接口方法</li></ul><h4 id="代码示范"><a href="#代码示范" class="headerlink" title="代码示范"></a>代码示范</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FunctionalInterface</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">IUserMessage</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 消息转化方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message 要转换的消息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> format 转换的格式（xml，json。。）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 返回转换的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function">String <span class="title">format</span><span class="params">(String message,String format)</span></span>;</span><br><span class="line">    <span class="function">String <span class="title">toString</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">vertifyMessage</span><span class="params">(String msg)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (msg!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMessageImpl</span> <span class="keyword">implements</span> <span class="title">IUserMessage</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">format</span><span class="params">(String message, String format)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"消息转换...."</span>);</span><br><span class="line">        <span class="keyword">return</span> message;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String msg = <span class="string">"Hello world"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (IUserMessage.vertifyMessage(msg))&#123;</span><br><span class="line">    IUserMessage iUserMessage = <span class="keyword">new</span> UserMessageImpl();</span><br><span class="line">    iUserMessage.format(<span class="string">"hello"</span>,<span class="string">"json"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Lambda表达式与函数式接口的关系"><a href="#Lambda表达式与函数式接口的关系" class="headerlink" title="Lambda表达式与函数式接口的关系"></a>Lambda表达式与函数式接口的关系</h3><ul><li>函数式接口，只包含一个操作方法。</li><li>Lambda表达式，只能操作一个方法。</li><li>Java中Lambda表达式，核心就是一个函数式接口的实现。</li></ul><h4 id="代码示范-1"><a href="#代码示范-1" class="headerlink" title="代码示范"></a>代码示范</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//匿名内部类实现接口的抽象方法</span></span><br><span class="line">IUserAuth iUserAuth1 = <span class="keyword">new</span> IUserAuth() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">vertifyUser</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"admin"</span>.equals(username)?<span class="string">"管理员"</span>:<span class="string">"会员"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//Lambda表达式</span></span><br><span class="line">IUserAuth iUserAuth2 = (String username)-&gt;&#123;<span class="keyword">return</span>  <span class="string">"admin"</span>.equals(username)?<span class="string">"lbd管理员"</span>:<span class="string">"lbd会员"</span>;&#125;;</span><br><span class="line">System.out.println(iUserAuth2.vertifyUser(<span class="string">"admin"</span>));</span><br></pre></td></tr></table></figure><h3 id="JDK中常见的函数式接口"><a href="#JDK中常见的函数式接口" class="headerlink" title="JDK中常见的函数式接口"></a>JDK中常见的函数式接口</h3><ul><li>java.lang.Runable</li><li>java.lang.Comparable</li><li>java.lang.Comparator</li><li>java.io.FileFilter</li><li>more….</li></ul><blockquote><p>Java8提供了java.util.function包，提供了常用的函数式功能接口。</p></blockquote><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><h5 id="验证一个参数是否合法性-Predicate"><a href="#验证一个参数是否合法性-Predicate" class="headerlink" title="验证一个参数是否合法性 Predicate"></a>验证一个参数是否合法性 Predicate<T></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Predicate&lt;String&gt; pre = (String username)-&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"admin"</span>.equals(username);</span><br><span class="line">&#125;;</span><br><span class="line">System.out.println(pre.test(<span class="string">"admin"</span>));</span><br><span class="line">System.out.println(pre.test(<span class="string">"manager"</span>));</span><br></pre></td></tr></table></figure><h5 id="接口一个参数，不返回任何结果-Consumer"><a href="#接口一个参数，不返回任何结果-Consumer" class="headerlink" title="接口一个参数，不返回任何结果 Consumer"></a>接口一个参数，不返回任何结果 Consumer<T></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Consumer&lt;String&gt; consumer = (String message) -&gt; &#123;</span><br><span class="line">    System.out.println(<span class="string">"接收到参数"</span>+message);</span><br><span class="line">    System.out.println(<span class="string">"消息发送完成"</span>);</span><br><span class="line">&#125;;</span><br><span class="line">consumer.accept(<span class="string">"hello world"</span>);</span><br></pre></td></tr></table></figure><h5 id="接收参数对象T，返回结果对象R-Function-lt-T-R-gt"><a href="#接收参数对象T，返回结果对象R-Function-lt-T-R-gt" class="headerlink" title="接收参数对象T，返回结果对象R Function&lt;T,R&gt;"></a>接收参数对象T，返回结果对象R Function&lt;T,R&gt;</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Function&lt;String,Integer&gt; fun = (String gender) -&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"male"</span>.equals(gender)?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125;;</span><br><span class="line">System.out.println(fun.apply(<span class="string">"male"</span>));</span><br></pre></td></tr></table></figure><h5 id="不接受参数，提供T对象的创建工厂-Supplier"><a href="#不接受参数，提供T对象的创建工厂-Supplier" class="headerlink" title="不接受参数，提供T对象的创建工厂 Supplier"></a>不接受参数，提供T对象的创建工厂 Supplier<T></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Supplier&lt;String&gt; sup = () -&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> UUID.randomUUID().toString();</span><br><span class="line">&#125;;</span><br><span class="line">System.out.println(sup.get());</span><br></pre></td></tr></table></figure><h5 id="接收参数对象T，返回结果对象T-UnaryOperator"><a href="#接收参数对象T，返回结果对象T-UnaryOperator" class="headerlink" title="接收参数对象T，返回结果对象T UnaryOperator"></a>接收参数对象T，返回结果对象T UnaryOperator<T></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">UnaryOperator&lt;String&gt; uo &#x3D; (String image)-&gt;&#123;</span><br><span class="line">    image +&#x3D;&quot;[100*200]&quot;;</span><br><span class="line">    return image;</span><br><span class="line">&#125;;</span><br><span class="line">System.out.println(uo.apply(&quot;原图片--&quot;));</span><br></pre></td></tr></table></figure><h5 id="接收两个T对象，返回一个T对象的处理结果-BinaryOperator"><a href="#接收两个T对象，返回一个T对象的处理结果-BinaryOperator" class="headerlink" title="接收两个T对象，返回一个T对象的处理结果 BinaryOperator"></a>接收两个T对象，返回一个T对象的处理结果 BinaryOperator<T></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">BinaryOperator&lt;Integer&gt; bo = (Integer i1,Integer i2)-&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> i1&gt;i2?i1:i2;</span><br><span class="line">&#125;;</span><br><span class="line">System.out.println(bo.apply(<span class="number">12</span>,<span class="number">13</span>));</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Lambda表达式概述&quot;&gt;&lt;a href=&quot;#Lambda表达式概述&quot; class=&quot;headerlink&quot; title=&quot;Lambda表达式概述&quot;&gt;&lt;/a&gt;Lambda表达式概述&lt;/h2&gt;&lt;h3 id=&quot;什么是Lambda&quot;&gt;&lt;a href=&quot;#什么是Lambd
      
    
    </summary>
    
    
      <category term="jdk8" scheme="https://blog.liqian.fun/categories/jdk8/"/>
    
    
      <category term="lambda" scheme="https://blog.liqian.fun/tags/lambda/"/>
    
  </entry>
  
  <entry>
    <title>cesium学习笔记</title>
    <link href="https://blog.liqian.fun/2020/02/20/cesium%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.liqian.fun/2020/02/20/cesium%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-02-20T09:25:31.000Z</published>
    <updated>2020-02-20T09:27:01.590Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Cesium-引擎学习"><a href="#Cesium-引擎学习" class="headerlink" title="Cesium 引擎学习"></a>Cesium 引擎学习</h1><h2 id="Qt-WebSocket通信"><a href="#Qt-WebSocket通信" class="headerlink" title="Qt WebSocket通信"></a>Qt WebSocket通信</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">new QWebChannel(qt.webChannelTransport, function (channel) &#123;</span><br><span class="line">        &#x2F;&#x2F;绑定Qt端注册对象，需要与Qt注册方名字保持一致</span><br><span class="line">           interactObj &#x3D; channel.objects.interactObj;</span><br><span class="line">           if (interactObj.JSSendError)</span><br><span class="line">               interactObj.JSSendError(&quot;testeteeeeee&quot;);</span><br><span class="line">           &#x2F;&#x2F;Web connect the Qt signal,then Qt can call &quot;output&quot; function</span><br><span class="line">           interactObj.SigSendMessageToJS.connect(function (str) &#123;</span><br><span class="line">               try &#123;</span><br><span class="line">                   var date &#x3D; new Date();</span><br><span class="line">                   var cmd &#x3D; str.substring(0, 3);</span><br><span class="line">                   console.log(&#96;数据接收指令：$&#123;cmd&#125;，完成时间&#96; + date.toLocaleString());</span><br><span class="line">                   if (transport.receive[cmd]) &#123;</span><br><span class="line">                       if (typeof transport.receive[cmd] &#x3D;&#x3D; &quot;function&quot;) &#123;</span><br><span class="line">                           var data &#x3D; str.substr(3);</span><br><span class="line">                           transport.receive[cmd](data);</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125; else &#123;</span><br><span class="line">                       console.log(&#96;接收指令：$&#123;cmd&#125;，但是未找到对应的处理模块&#96;);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; catch (error) &#123;</span><br><span class="line">                   addLog(&#96;接收数据$&#123;str&#125;,数据指令处理出错，错误：$&#123;error&#125;&#96;)</span><br><span class="line">                   alert(&quot;数据指令处理出错,错误原因：&quot;+error);</span><br><span class="line">               &#125;</span><br><span class="line">               return</span><br><span class="line">           &#125;);</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h2 id="初始化三维地图"><a href="#初始化三维地图" class="headerlink" title="初始化三维地图"></a>初始化三维地图</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">"CesiumContainer"</span>&gt;&lt;<span class="regexp">/div&gt; </span></span><br><span class="line"><span class="regexp">viewer = new Cesium.Viewer('CesiumContainer', &#123;</span></span><br><span class="line"><span class="regexp">        infoBox: false, /</span><span class="regexp">/是否显示点击要素之后显示的信息</span></span><br><span class="line"><span class="regexp">        selectionIndicator: false, /</span><span class="regexp">/是否显示投影方式控件</span></span><br><span class="line"><span class="regexp">        timeline: true, /</span><span class="regexp">/是否显示时间线控件</span></span><br><span class="line"><span class="regexp">        animation: true, /</span><span class="regexp">/是否显示动画空间</span></span><br><span class="line"><span class="regexp">        navigation: true,/</span><span class="regexp">/是否显示信息控件</span></span><br><span class="line"><span class="regexp">        shouldAnimate: false</span></span><br><span class="line"><span class="regexp">&#125;);</span></span><br></pre></td></tr></table></figure><h2 id="加载地形侧影"><a href="#加载地形侧影" class="headerlink" title="加载地形侧影"></a>加载地形侧影</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> layer=<span class="keyword">new</span> Cesium.MapboxImageryProvider(&#123;</span><br><span class="line">        mapId: <span class="string">'mapbox.streets'</span>,</span><br><span class="line">        accessToken: <span class="string">'pk.eyJ1IjoibGlxaWFuOTciLCJhIjoiY2sybWw5Y3ZvMGo0YzNtdDVocGNuZnAyYiJ9.4szlvVdzJhZsYjyNCFxtJQ'</span></span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h2 id="加载三维模型"><a href="#加载三维模型" class="headerlink" title="加载三维模型"></a>加载三维模型</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> tileset = viewer.scene.primitives.add(<span class="keyword">new</span> Cesium.Cesium3DTileset(&#123;</span><br><span class="line">        url: <span class="string">'http://ys.liqian.fun:8181/an_3dtiles/tileset.json'</span>,</span><br><span class="line">        <span class="comment">//classificationType:Cesium.ClassificationType.TERRAIN //地形侧影</span></span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure><h2 id="加载三维场景"><a href="#加载三维场景" class="headerlink" title="加载三维场景"></a>加载三维场景</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scene.open(<span class="string">"http://192.168.2.150:8090/iserver/services/3D-chengdushuangliu1231/rest/realspace"</span>).</span><br></pre></td></tr></table></figure><h2 id="第一人称视角"><a href="#第一人称视角" class="headerlink" title="第一人称视角"></a>第一人称视角</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scope.viewer.camera.setView(&#123;</span><br><span class="line">  destination: pos,</span><br><span class="line">  orientation: headingpitchroll</span><br><span class="line">&#125;)</span><br><span class="line">scope.viewer.camera.lookAtTransform(Cesium.Matrix4.IDENTITY)</span><br></pre></td></tr></table></figure><h2 id="自由视角"><a href="#自由视角" class="headerlink" title="自由视角"></a>自由视角</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">viewer.camera.lookAtTransform(Cesium.Matrix4.IDENTITY) <span class="comment">//视角</span></span><br></pre></td></tr></table></figure><h2 id="清除kml数据"><a href="#清除kml数据" class="headerlink" title="清除kml数据"></a>清除kml数据</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> removeDatasources=viewer.dataSources._dataSources.filter(<span class="function"><span class="params">t</span>=&gt;</span>t.name.indexOf(<span class="string">'kmldataSourcexxx'</span>)&gt;<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">  removeDatasources.forEach(<span class="function"><span class="params">t</span>=&gt;</span>&#123;</span><br><span class="line">    viewer.dataSources.remove(t,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h2 id="导入kml数据"><a href="#导入kml数据" class="headerlink" title="导入kml数据"></a>导入kml数据</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">var</span> reader = <span class="keyword">new</span> FileReader();<span class="comment">//new一个FileReader实例</span></span><br><span class="line">                reader.onload=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">                    <span class="keyword">if</span>(flyline)&#123;</span><br><span class="line">                        flyline.impotKMLDatasource(e.target.result,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">                            $(<span class="string">'#fileselect'</span>).val(<span class="string">''</span>);</span><br><span class="line">                            $(<span class="string">"#loading"</span>).hide();</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">reader.readAsDataURL(<span class="keyword">this</span>.files[<span class="number">0</span>]);</span><br></pre></td></tr></table></figure><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><h3 id="加载geojson数据，可拓展飞行边界"><a href="#加载geojson数据，可拓展飞行边界" class="headerlink" title="加载geojson数据，可拓展飞行边界"></a>加载geojson数据，可拓展飞行边界</h3><p><a href="http://geojson.io/#map=2/52.9/59.1" target="_blank" rel="noopener">http://geojson.io/#map=2/52.9/59.1</a></p><h3 id="Cesium加载图片"><a href="#Cesium加载图片" class="headerlink" title="Cesium加载图片"></a>Cesium加载图片</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">viewer.entities.add(&#123;</span><br><span class="line">                position: poi,</span><br><span class="line">                billboard: &#123;</span><br><span class="line">                    width:<span class="number">50</span>,</span><br><span class="line">                    height:<span class="number">50</span>,</span><br><span class="line">                    image: <span class="string">''</span>,</span><br><span class="line">                    show: <span class="literal">true</span>, <span class="comment">// default</span></span><br><span class="line">                    horizontalOrigin: Cesium.HorizontalOrigin.RIGHT,</span><br><span class="line">                    distanceDisplayCondition : <span class="keyword">new</span> Cesium.DistanceDisplayCondition(<span class="number">0.0</span>, <span class="number">1000.0</span>)</span><br><span class="line">                    <span class="comment">//verticalOrigin: Cesium.VerticalOrigin.BOTTOM,</span></span><br><span class="line">                &#125;,</span><br><span class="line">                properties: d <span class="comment">//图片信息数据，json格式</span></span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><h3 id="Cesium加载gltf模型"><a href="#Cesium加载gltf模型" class="headerlink" title="Cesium加载gltf模型"></a>Cesium加载gltf模型</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">viewer.entities.add(&#123;</span><br><span class="line">               name : <span class="string">""</span>,</span><br><span class="line">                position: Cesium.Cartesian3.fromDegrees(<span class="built_in">Number</span>(d.x), <span class="built_in">Number</span>(d.y), <span class="built_in">Number</span>(d.alt) + <span class="number">60</span>),</span><br><span class="line">                model: &#123;</span><br><span class="line">                    scale: <span class="number">1</span>,</span><br><span class="line">                    silhouetteColor:Cesium.Color.CYAN,</span><br><span class="line">                    silhouetteSize: <span class="number">0</span>,</span><br><span class="line">                    <span class="comment">//color:Cesium.Color.RED,</span></span><br><span class="line">                    uri: <span class="string">'./static/data/model/green.gltf'</span>,</span><br><span class="line">                    minimumPixelSize: <span class="number">128</span>,</span><br><span class="line">                    maximumScale: <span class="number">20000</span>,</span><br><span class="line">                   distanceDisplayCondition:<span class="keyword">new</span> Cesium.DistanceDisplayCondition(<span class="number">10.0</span>, <span class="number">300.0</span>)</span><br><span class="line">                &#125;,</span><br><span class="line">               properties: d</span><br><span class="line">            &#125;);</span><br></pre></td></tr></table></figure><h3 id="围绕某个位置进行飞行"><a href="#围绕某个位置进行飞行" class="headerlink" title="围绕某个位置进行飞行"></a>围绕某个位置进行飞行</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">rotateByPoint: <span class="function"><span class="keyword">function</span> (<span class="params">viewer, t</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.roate=!<span class="keyword">this</span>.roate</span><br><span class="line">            <span class="keyword">this</span>.position=t; <span class="comment">//坐标</span></span><br><span class="line">            <span class="keyword">this</span>.distance = Cesium.Cartesian3.distance(t, viewer.camera.positionWC);</span><br><span class="line">            <span class="keyword">this</span>.angle = <span class="number">10</span>;</span><br><span class="line">            <span class="keyword">var</span> time = viewer.clock.currentTime.clone();</span><br><span class="line">            <span class="keyword">this</span>.heading = viewer.camera.heading;</span><br><span class="line">            <span class="keyword">this</span>.pitch = <span class="number">-0.97</span><span class="comment">//viewer.camera.pitch;</span></span><br><span class="line">            <span class="keyword">var</span> $<span class="keyword">this</span>=<span class="keyword">this</span></span><br><span class="line">            <span class="keyword">this</span>.viewer.clock.onTick.addEventListener(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">                <span class="keyword">var</span> ti =Cesium.JulianDate.secondsDifference(<span class="keyword">this</span>.viewer.clock.currentTime,time),</span><br><span class="line">                    i = Cesium.Math.toRadians(ti *<span class="number">10</span>) + <span class="number">3</span>;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="keyword">this</span>.pitch)</span><br><span class="line">                <span class="keyword">if</span>($<span class="keyword">this</span>.roate)&#123;</span><br><span class="line">                    <span class="keyword">this</span>.viewer.scene.camera.setView(</span><br><span class="line">                        &#123;</span><br><span class="line">                            destination: t,</span><br><span class="line">                            orientation: &#123;</span><br><span class="line">                                heading: i,</span><br><span class="line">                                roll:<span class="number">6.283185182050259</span>,</span><br><span class="line">                                pitch: <span class="number">-0.97</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                ),</span><br><span class="line">                        <span class="comment">// this.viewer.scene.camera.moveBackward(this.distance )</span></span><br><span class="line">                        <span class="keyword">this</span>.viewer.scene.camera.moveBackward(<span class="number">200</span>)</span><br><span class="line">                &#125;</span><br><span class="line">                &#125;, <span class="keyword">this</span>);</span><br><span class="line">        &#125;,</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Cesium-引擎学习&quot;&gt;&lt;a href=&quot;#Cesium-引擎学习&quot; class=&quot;headerlink&quot; title=&quot;Cesium 引擎学习&quot;&gt;&lt;/a&gt;Cesium 引擎学习&lt;/h1&gt;&lt;h2 id=&quot;Qt-WebSocket通信&quot;&gt;&lt;a href=&quot;#Qt-
      
    
    </summary>
    
    
      <category term="地图" scheme="https://blog.liqian.fun/categories/%E5%9C%B0%E5%9B%BE/"/>
    
    
      <category term="cesium" scheme="https://blog.liqian.fun/tags/cesium/"/>
    
  </entry>
  
  <entry>
    <title>Hexo入门</title>
    <link href="https://blog.liqian.fun/2020/02/15/hello-world/"/>
    <id>https://blog.liqian.fun/2020/02/15/hello-world/</id>
    <published>2020-02-15T14:50:56.000Z</published>
    <updated>2020-02-16T08:22:30.730Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://blog.liqian.fun/categories/Hexo/"/>
    
    
      <category term="测试" scheme="https://blog.liqian.fun/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
</feed>
