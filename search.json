[{"title":"rabbitmq实践","url":"/2020/06/02/rabbitmq%E5%AE%9E%E8%B7%B5/","content":"<h1 id=\"RabbitMq消息队列实践\"><a href=\"#RabbitMq消息队列实践\" class=\"headerlink\" title=\"RabbitMq消息队列实践\"></a>RabbitMq消息队列实践</h1><h2 id=\"基本知识点\"><a href=\"#基本知识点\" class=\"headerlink\" title=\"基本知识点\"></a>基本知识点</h2><p>采用Erlang语言实现的<strong>Advanced Message Queued Protocol</strong> 的消息队列，最初源于金融系统，用户在分布式系统中存储转发消息，目前用户各类系统的解耦，削峰。</p>\n<h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ul>\n<li>可靠性：通过支持消息持久化，支持事物，支持消费和传输的ack等来确保可靠性。</li>\n<li>路由机制：支持主流的订阅消费模式，如广播，订阅，headers匹配等。</li>\n<li>扩展性：多个RabbitMq节点可以组成一个集群，也可以根据实际业务情况动态的扩展集群中的节点。</li>\n<li>高可用性：RabbitMq除了支持原生的AMQP协议，还支持STOMP，MQTT等多种消息中间件协议。</li>\n<li>多语言客户端：RabbitMq几乎支持所有常用语言，如Java，Python，Ruby等。</li>\n<li>管理界面：RabbitMq提供了一个简单易用的界面，使得用户可以监控和管理消息，集群中的节点。</li>\n<li>插件机制：RabbitMq提供了多种插件，以实现从多方面进行扩展，当然也可以编写自己的插件。</li>\n</ul>\n<h3 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h3><h4 id=\"Message消息\"><a href=\"#Message消息\" class=\"headerlink\" title=\"Message消息\"></a>Message消息</h4><p>具体的消息，包涵消息头（附属的配置信息）和消息体（消息的实体内容），由发布者将消息推送到<strong>Exchange（交换机）</strong>，由消费者从Queue中获取。</p>\n<h4 id=\"Publisher生产者\"><a href=\"#Publisher生产者\" class=\"headerlink\" title=\"Publisher生产者\"></a>Publisher生产者</h4><p>消息生产者，负责将消息发布到<strong>Exchange（交换机）</strong>中。</p>\n<h4 id=\"Exchange交换机\"><a href=\"#Exchange交换机\" class=\"headerlink\" title=\"Exchange交换机\"></a>Exchange交换机</h4><p>交换机，用来接收<strong>Publisher（生产者）</strong>发送的消息并将这些消息路由给服务器中的<strong>Queue（队列）</strong>。</p>\n<h4 id=\"Binding绑定\"><a href=\"#Binding绑定\" class=\"headerlink\" title=\"Binding绑定\"></a>Binding绑定</h4><p>绑定，用于给<strong>Exchange（交换机）</strong>和<strong>Queue（队列）</strong>建立关系，从而决定将这个<strong>Exchange（交换机</strong>）中的哪些消息，发送到对应的<strong>Queue（队列）</strong>。</p>\n<h4 id=\"Queue队列\"><a href=\"#Queue队列\" class=\"headerlink\" title=\"Queue队列\"></a>Queue队列</h4><p>消息队列，用于保存消息直接发送到消费者。它是消息的容器，也是消息的终点。一个消息可投入一个或多个消息队列，消息一直在队列里面，等待消费者连接到这个队列将其取走。</p>\n<h4 id=\"Connection连接\"><a href=\"#Connection连接\" class=\"headerlink\" title=\"Connection连接\"></a>Connection连接</h4><p>连接，内部持有一些<strong>channel（通道）</strong>，用于和<strong>queue（队列）</strong>打交道。</p>\n<h4 id=\"Channel通道\"><a href=\"#Channel通道\" class=\"headerlink\" title=\"Channel通道\"></a>Channel通道</h4><p>通道，RabbitMq与外部打交道都是通过<strong>Channel（通道）</strong>来的，发布消息，订阅队列还是接收消息，这些动作都是通过通道来的，简单的说消息通过<strong>Channel（通道）</strong>塞进队列或者流出队列。</p>\n<h4 id=\"Consumer消费者\"><a href=\"#Consumer消费者\" class=\"headerlink\" title=\"Consumer消费者\"></a>Consumer消费者</h4><p>消费者，从消息队列中获取消息的主体。</p>\n<h4 id=\"Virtual-Host虚拟主机\"><a href=\"#Virtual-Host虚拟主机\" class=\"headerlink\" title=\"Virtual Host虚拟主机\"></a>Virtual Host虚拟主机</h4><p>虚拟主机，表示一批交换机，消息队列，和相关对象。虚拟主机是共享相同身份认证和加密环境的独立服务器域。</p>\n<p>每个vhost本质上就是一个mini版的RabbitMq服务器，拥有自己的队列，交换器，绑定和权限机制。</p>\n<p>vhost是AMQP概念的基础，必须在连接时指定，RabbitMq默认的vhost是/，<strong>可以理解为db中的数据库概念，用于逻辑拆分。</strong></p>\n<h4 id=\"Broker消息队列服务器实体\"><a href=\"#Broker消息队列服务器实体\" class=\"headerlink\" title=\"Broker消息队列服务器实体\"></a>Broker消息队列服务器实体</h4><p>broker是指一个或多个erlang node的逻辑分组，且node上运行着RabbitMq应用程序，cluster是在broker的基础上，增加了node之间的的共享元数据的约束。</p>\n<h3 id=\"常用命令\"><a href=\"#常用命令\" class=\"headerlink\" title=\"常用命令\"></a>常用命令</h3><ul>\n<li>启动服务</li>\n</ul>\n<p>rabbitmq-server start &amp;</p>\n<ul>\n<li>停止服务</li>\n</ul>\n<p>rabbitmq-server stop_  app</p>\n<ul>\n<li>管理插件</li>\n</ul>\n<p>rabbitmq-plugins enable rabbitmq_management</p>\n<h2 id=\"消息的生产与消费\"><a href=\"#消息的生产与消费\" class=\"headerlink\" title=\"消息的生产与消费\"></a>消息的生产与消费</h2><h3 id=\"基本构建缺一不可\"><a href=\"#基本构建缺一不可\" class=\"headerlink\" title=\"基本构建缺一不可\"></a>基本构建缺一不可</h3><ul>\n<li>ConnectionFactory: 获取连接工厂。</li>\n<li>Connection：一个连接。</li>\n<li>Channel：数据通信信道，可发送和接收消息。</li>\n<li>Queue：具体的消息存储队列。</li>\n<li>Publisher：生产者。</li>\n<li>Consumer：消费者。</li>\n</ul>\n<h2 id=\"项目使用\"><a href=\"#项目使用\" class=\"headerlink\" title=\"项目使用\"></a>项目使用</h2><h3 id=\"Maven坐标\"><a href=\"#Maven坐标\" class=\"headerlink\" title=\"Maven坐标\"></a>Maven坐标</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;dependency&gt;</span><br><span class=\"line\">    &lt;groupId&gt;com.rabbitmq&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;amqp-client&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;5.9.0&lt;&#x2F;version&gt;</span><br><span class=\"line\">&lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Gradle坐标\"><a href=\"#Gradle坐标\" class=\"headerlink\" title=\"Gradle坐标\"></a>Gradle坐标</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">compile group: &#39;com.rabbitmq&#39;, name: &#39;amqp-client&#39;, version: &#39;5.9.0&#39;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"模式\"><a href=\"#模式\" class=\"headerlink\" title=\"模式\"></a>模式</h2><h4 id=\"Simple模式\"><a href=\"#Simple模式\" class=\"headerlink\" title=\"Simple模式\"></a>Simple模式</h4><h5 id=\"Publisher\"><a href=\"#Publisher\" class=\"headerlink\" title=\"Publisher\"></a>Publisher</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">public class Publisher1 &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    private static final String EX_CHANGE &#x3D; &quot;rabbit_ex_routing&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void main(String args[]) throws IOException, TimeoutException &#123;</span><br><span class=\"line\">        &#x2F;&#x2F;创建connectionFactory,并进行配置</span><br><span class=\"line\">        ConnectionFactory connectionFactory &#x3D; new ConnectionFactory();</span><br><span class=\"line\">        connectionFactory.setHost(&quot;111.229.247.151&quot;);</span><br><span class=\"line\">        connectionFactory.setPort(5672);</span><br><span class=\"line\">        connectionFactory.setVirtualHost(&quot;&#x2F;&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#x2F;&#x2F;建立连接</span><br><span class=\"line\">        Connection connection &#x3D; connectionFactory.newConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#x2F;&#x2F;创立通道</span><br><span class=\"line\">        Channel channel &#x3D; connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#x2F;**</span><br><span class=\"line\">         * 声明MQ</span><br><span class=\"line\">         * 参数1：交换机名称</span><br><span class=\"line\">         * 参数2：声明交换机类型，主要有以下类型，主要使用前三种类型</span><br><span class=\"line\">         * fanout:会把所有发送到该交换机的消息路由到所有与它绑定的Queue中</span><br><span class=\"line\">         * direct：会把消息路由到那些banding key与routing key完全匹配的Queue种</span><br><span class=\"line\">         * topic：模糊匹配，可以通过通配符满足一部分规则就可以传送，其中&quot;*&quot;用于匹配一个单词，&quot;#&quot;用于匹配多个单词（可以是零个）</span><br><span class=\"line\">         * headers：headers类型的Exchange不依赖于routing key与binding key的匹配规则来路由消息，而是根据发送消息中的headers属性进行匹配</span><br><span class=\"line\">         *&#x2F;</span><br><span class=\"line\">        channel.exchangeDeclare(EX_CHANGE, BuiltinExchangeType.DIRECT);&#x2F;&#x2F;direct路由模式</span><br><span class=\"line\"></span><br><span class=\"line\">        channel.basicPublish(EX_CHANGE,&quot;blue&quot;,null,&quot;blue&quot;.getBytes());</span><br><span class=\"line\">        channel.basicPublish(EX_CHANGE,&quot;red&quot;,null,&quot;red&quot;.getBytes());</span><br><span class=\"line\">        channel.basicPublish(EX_CHANGE,&quot;yellow&quot;,null,&quot;yellow&quot;.getBytes());</span><br><span class=\"line\">        &#x2F;&#x2F;关闭连接</span><br><span class=\"line\">        channel.close();</span><br><span class=\"line\">        connection.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Consumer\"><a href=\"#Consumer\" class=\"headerlink\" title=\"Consumer\"></a>Consumer</h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">public class Consumer1 &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static final  String QUEUE &#x3D; &quot;rabbit_simple&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void main(String args[]) throws IOException, TimeoutException &#123;</span><br><span class=\"line\">        &#x2F;&#x2F;创建connectionFactory,并进行配置</span><br><span class=\"line\">        ConnectionFactory connectionFactory &#x3D; new ConnectionFactory();</span><br><span class=\"line\">        connectionFactory.setHost(&quot;111.229.247.151&quot;);</span><br><span class=\"line\">        connectionFactory.setPort(5672);</span><br><span class=\"line\">        connectionFactory.setVirtualHost(&quot;&#x2F;&quot;);</span><br><span class=\"line\">        &#x2F;&#x2F;建立连接</span><br><span class=\"line\">        Connection connection &#x3D; connectionFactory.newConnection();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#x2F;&#x2F;通过连接建立一个通道</span><br><span class=\"line\">        Channel channel &#x3D; connection.createChannel();</span><br><span class=\"line\"></span><br><span class=\"line\">        &#x2F;&#x2F;声明一个队列</span><br><span class=\"line\">        channel.queueDeclare(QUEUE,false,false,false,null);</span><br><span class=\"line\">        &#x2F;&#x2F;创建消费者</span><br><span class=\"line\">        DefaultConsumer defaultConsumer &#x3D; new DefaultConsumer(channel)&#123;</span><br><span class=\"line\">            @Override</span><br><span class=\"line\">            public void handleDelivery(String consumerTag,</span><br><span class=\"line\">                                       Envelope envelope,</span><br><span class=\"line\">                                       AMQP.BasicProperties properties,</span><br><span class=\"line\">                                       byte[] body)</span><br><span class=\"line\">                    throws IOException</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                String routingKey &#x3D; envelope.getRoutingKey();</span><br><span class=\"line\">                long deliveryTag &#x3D; envelope.getDeliveryTag();</span><br><span class=\"line\">                String msg &#x3D; new String(body,&quot;UTF-8&quot;);</span><br><span class=\"line\">                System.out.println(msg);</span><br><span class=\"line\">                &#x2F;&#x2F;确认响应</span><br><span class=\"line\">                channel.basicAck(deliveryTag, false); &#x2F;&#x2F;false表示确认响应</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        &#x2F;&#x2F;消费者监听接收消息</span><br><span class=\"line\">        while (true)&#123;</span><br><span class=\"line\">            channel.basicConsume(QUEUE,false,defaultConsumer);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"更多模式\"><a href=\"#更多模式\" class=\"headerlink\" title=\"更多模式\"></a>更多模式</h4><p><a href=\"https://github.com/isliqian/rabbitmq-example\" target=\"_blank\" rel=\"noopener\">https://github.com/isliqian/rabbitmq-example</a></p>\n","categories":["rabbitmq"],"tags":["java"]},{"title":"存储过程的使用","url":"/2020/05/05/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E7%9A%84%E4%BD%BF%E7%94%A8/","content":"<h2 id=\"基础数据表（students）创建\"><a href=\"#基础数据表（students）创建\" class=\"headerlink\" title=\"基础数据表（students）创建\"></a>基础数据表（students）创建</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">create table students(</span><br><span class=\"line\">    id int primary key auto_increment,</span><br><span class=\"line\">    age int,</span><br><span class=\"line\">    name varchar(20),</span><br><span class=\"line\">    city varchar(20)</span><br><span class=\"line\">) character set utf8;</span><br><span class=\"line\"></span><br><span class=\"line\">insert into students values(null, 22, &#39;赵四&#39;, &#39;杭州&#39;);</span><br><span class=\"line\">insert into students values(null, 16, &#39;刘能&#39;, &#39;上海&#39;);</span><br><span class=\"line\">insert into students values(null, 20, &#39;谢广坤&#39;, &#39;深圳&#39;);</span><br><span class=\"line\">insert into students values(null, 21, &#39;刘美兰&#39;, &#39;北京&#39;);</span><br><span class=\"line\">insert into students values(null, 20, &#39;宋晓峰&#39;, &#39;湖北&#39;);</span><br><span class=\"line\">insert into students values(null, 21, &#39;谢大脚&#39;, &#39;江苏&#39;);</span><br><span class=\"line\">insert into students values(null, 20, &#39;苏玉红&#39;, &#39;天津&#39;);</span><br><span class=\"line\">insert into students values(null, 21, &#39;陈艳兰&#39;, &#39;云南&#39;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"基本结构\"><a href=\"#基本结构\" class=\"headerlink\" title=\"基本结构\"></a>基本结构</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">create or replace procedure 存储过程名字</span><br><span class=\"line\">(</span><br><span class=\"line\">​\t参数1 in number,</span><br><span class=\"line\">​\t参数2 in number</span><br><span class=\"line\">) is </span><br><span class=\"line\">变量1 integer :&#x3D; 0;</span><br><span class=\"line\">变量2 date;</span><br><span class=\"line\">begin</span><br><span class=\"line\">end 存储过程名字</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><ol>\n<li>存储过程参数不带取值范围，in代表传入，out代表输出。</li>\n<li>变量带取值范围，后面接分号。</li>\n<li>在判断语句前最好先用count(*)，函数判断是否存在该条操作记录。</li>\n<li>用select <strong>** into **</strong> 给变量赋值。</li>\n<li>在代码中抛出异常用raise+异常名。</li>\n</ol>\n<h2 id=\"不带参数的存储过程\"><a href=\"#不带参数的存储过程\" class=\"headerlink\" title=\"不带参数的存储过程\"></a>不带参数的存储过程</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter ;; -- 替换分隔符</span><br><span class=\"line\">    create procedure select_students_count() </span><br><span class=\"line\">        begin </span><br><span class=\"line\">            select count(id) from students; </span><br><span class=\"line\">        end ;;</span><br><span class=\"line\">delimiter ;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 执行存储过程</span><br><span class=\"line\">call select_students_count();</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"带参数的存储过程\"><a href=\"#带参数的存储过程\" class=\"headerlink\" title=\"带参数的存储过程\"></a>带参数的存储过程</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">-- 根据城市查询总数</span><br><span class=\"line\">delimiter ;;</span><br><span class=\"line\">    create procedure sp_test(in _city varchar(25) CHARACTER SET utf8)--  in (表示参数传递给存储过程)</span><br><span class=\"line\">        begin</span><br><span class=\"line\">            select _city;</span><br><span class=\"line\">        end;;</span><br><span class=\"line\">delimiter ;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 执行存储过程</span><br><span class=\"line\">call select_students_by_city_count(&#39;北京&#39;);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>在创建存储过程的时候，设计中文的参数的数据类型需为Nvarchar，网上据说传递参数的时候也需要多加一个N（这里我没加貌似也正常输出）。</p>\n</blockquote>\n<h2 id=\"带有输出参数的存储过程\"><a href=\"#带有输出参数的存储过程\" class=\"headerlink\" title=\"带有输出参数的存储过程\"></a><strong>带有输出参数的存储过程</strong></h2><blockquote>\n<p>MySQL 支持 in (传递给存储过程)，out (从存储过程传出) 和 inout (对存储过程传入和传出) 类型的参数。存储过程的代码位于 begin 和 end 语句内，它们是一系列 select 语句，用来检索值，然后保存到相应的变量 (通过 into 关键字)</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">-- 根据姓名查询学生信息，返回学生的城市</span><br><span class=\"line\">delimiter ;;</span><br><span class=\"line\">create procedure select_students_by_name(</span><br><span class=\"line\">    in _name nvarchar(255),</span><br><span class=\"line\">    out _city nvarchar(255), -- 输出参数</span><br><span class=\"line\">    inout _age int(11)</span><br><span class=\"line\">)</span><br><span class=\"line\">    begin </span><br><span class=\"line\">        select city from students where name &#x3D; _name and age &#x3D; _age into _city;</span><br><span class=\"line\">    end ;;</span><br><span class=\"line\">delimiter ;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 执行存储过程</span><br><span class=\"line\">set @_age &#x3D; 20;</span><br><span class=\"line\">set @_name &#x3D; &#39;谢广坤&#39;;</span><br><span class=\"line\">call select_students_by_name(@_name, @_city, @_age);</span><br><span class=\"line\">select @_name as name,@_city as city, @_age as age;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"带有通配符的存储过程\"><a href=\"#带有通配符的存储过程\" class=\"headerlink\" title=\"带有通配符的存储过程\"></a><strong>带有通配符的存储过程</strong></h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter ;;</span><br><span class=\"line\">create procedure select_students_by_likename(</span><br><span class=\"line\">    in _likename nvarchar(255)</span><br><span class=\"line\">)</span><br><span class=\"line\">    begin</span><br><span class=\"line\">        select * from students where name like _likename;</span><br><span class=\"line\">    end ;;</span><br><span class=\"line\">delimiter ;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 执行存储过程</span><br><span class=\"line\">call select_students_by_likename(&#39;%刘%&#39;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"使用存储过程进行增加、修改、删除\"><a href=\"#使用存储过程进行增加、修改、删除\" class=\"headerlink\" title=\"使用存储过程进行增加、修改、删除\"></a><strong>使用存储过程进行增加、修改、删除</strong></h2><h3 id=\"增加\"><a href=\"#增加\" class=\"headerlink\" title=\"增加\"></a>增加</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter ;;</span><br><span class=\"line\">create procedure insert_student(</span><br><span class=\"line\">    _id int,</span><br><span class=\"line\">    _name nvarchar(255),</span><br><span class=\"line\">    _age int,</span><br><span class=\"line\">    _city nvarchar(255)</span><br><span class=\"line\">)</span><br><span class=\"line\">    begin</span><br><span class=\"line\">        insert into students(id,name,age,city) values(_id,_name,_age,_city);</span><br><span class=\"line\">    end ;;</span><br><span class=\"line\">delimiter ;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 执行存储过程</span><br><span class=\"line\">call insert_student(9, &#39;瓶底子&#39;, 19, &#39;东北&#39;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改\"><a href=\"#修改\" class=\"headerlink\" title=\"修改\"></a>修改</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter ;;</span><br><span class=\"line\">create procedure update_student(</span><br><span class=\"line\">    _id int,</span><br><span class=\"line\">    _name nvarchar(25),</span><br><span class=\"line\">    _age int,</span><br><span class=\"line\">    _city nvarchar(25)</span><br><span class=\"line\">)</span><br><span class=\"line\">    begin</span><br><span class=\"line\">        update students set name &#x3D; _name, age &#x3D; _age, city &#x3D; _city where id &#x3D; _id;</span><br><span class=\"line\">    end ;;</span><br><span class=\"line\">delimiter ;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 执行存储过程</span><br><span class=\"line\">call update_student(9, &#39;李大个&#39;, 22, &#39;杭州&#39;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">delimiter ;;</span><br><span class=\"line\">create procedure delete_student_by_id(</span><br><span class=\"line\">    _id int</span><br><span class=\"line\">)</span><br><span class=\"line\">    begin</span><br><span class=\"line\">        delete from students where id&#x3D;_id;</span><br><span class=\"line\">    end ;;</span><br><span class=\"line\">delimiter ;</span><br><span class=\"line\"></span><br><span class=\"line\">-- 执行存储过程</span><br><span class=\"line\">call delete_student_by_id(9);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查询所有的存储过程\"><a href=\"#查询所有的存储过程\" class=\"headerlink\" title=\"查询所有的存储过程\"></a>查询所有的存储过程</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">select name from mysql.proc where db&#x3D;&#39;test&#39;;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"查询某个存储过程\"><a href=\"#查询某个存储过程\" class=\"headerlink\" title=\"查询某个存储过程\"></a>查询某个存储过程</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">show create procedure 存储过程名;</span><br></pre></td></tr></table></figure>\n\n","categories":["存储过程"],"tags":["db"]},{"title":"elasticsearch6.8.0与springboot初尝试","url":"/2020/04/07/elsticsearch6-8-0%E4%B8%8Espringboot%E5%88%9D%E5%B0%9D%E8%AF%95/","content":"<h3 id=\"docker-安装elasticsearch\"><a href=\"#docker-安装elasticsearch\" class=\"headerlink\" title=\"docker 安装elasticsearch\"></a>docker 安装elasticsearch</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -e ES_JAVA_OPTS&#x3D;&quot;-Xms256m -Xmx256m&quot; -d -p 9200:9200 -p 9300:9300 --name ES01 docker.elastic.co&#x2F;elasticsearch&#x2F;elasticsearch:6.6.1</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"docker安装kibana\"><a href=\"#docker安装kibana\" class=\"headerlink\" title=\"docker安装kibana\"></a>docker安装kibana</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">docker run -d -p 1358:5601 --link ES01 -e &quot;ELASTICSEARCH_URL&#x3D;http:&#x2F;&#x2F;47.96.142.241:9200&quot; kibana:6.6.2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"springboot整合elasticsearch\"><a href=\"#springboot整合elasticsearch\" class=\"headerlink\" title=\"springboot整合elasticsearch\"></a>springboot整合elasticsearch</h3><h4 id=\"引入pom依赖\"><a href=\"#引入pom依赖\" class=\"headerlink\" title=\"引入pom依赖\"></a>引入pom依赖</h4><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-data-elasticsearch<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"yml文件配置\"><a href=\"#yml文件配置\" class=\"headerlink\" title=\"yml文件配置\"></a>yml文件配置</h4><blockquote>\n<p>http连接方式端口为9200，java客户端连接方式端口为9300</p>\n</blockquote>\n<figure class=\"highlight yml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">spring:</span></span><br><span class=\"line\">  <span class=\"attr\">data:</span></span><br><span class=\"line\">    <span class=\"attr\">elasticsearch:</span></span><br><span class=\"line\">      <span class=\"attr\">cluster-name:</span> <span class=\"string\">docker-cluster</span></span><br><span class=\"line\">      <span class=\"attr\">cluster-nodes:</span> <span class=\"string\">ip:9300</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"启动成功如下所示\"><a href=\"#启动成功如下所示\" class=\"headerlink\" title=\"启动成功如下所示\"></a>启动成功如下所示</h4><p><code>Adding transport node : 47.96.142.241:9300</code></p>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><h4 id=\"源数据\"><a href=\"#源数据\" class=\"headerlink\" title=\"源数据\"></a>源数据</h4><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;&quot;took&quot;:1,&quot;timed_out&quot;:false,&quot;_shards&quot;:&#123;&quot;total&quot;:5,&quot;successful&quot;:5,&quot;skipped&quot;:0,&quot;failed&quot;:0&#125;,&quot;hits&quot;:&#123;&quot;total&quot;:100000,&quot;max_score&quot;:1.0,&quot;hits&quot;:[&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;14&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;14&quot;,&quot;uuid&quot;:&quot;00029bd170f21aa752a5139c386e274c&quot;,&quot;videoName&quot;:&quot;还君明珠&quot;,&quot;startTime&quot;:1584412791000,&quot;endTime&quot;:1584419145000,&quot;watchMin&quot;:106,&quot;category&quot;:&quot;tv&quot;,&quot;type&quot;:&quot;言情&#x2F;剧情&quot;,&quot;videoYear&quot;:&quot;2008&quot;,&quot;videoid&quot;:&quot;safc61v3270i8pp&quot;&#125;&#125;,&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;19&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;19&quot;,&quot;uuid&quot;:&quot;000569b65e552580425fc3efc706d303&quot;,&quot;videoName&quot;:&quot;忆涵游戏解说 迷你世界解密&quot;,&quot;startTime&quot;:1584863660000,&quot;endTime&quot;:1584867070000,&quot;watchMin&quot;:57,&quot;category&quot;:&quot;暂无&quot;,&quot;type&quot;:&quot;暂无&quot;,&quot;videoYear&quot;:&quot;暂无&quot;,&quot;videoid&quot;:&quot;1180n9fvczijjey&quot;&#125;&#125;,&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;22&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;22&quot;,&quot;uuid&quot;:&quot;000688e6c29322c51998cea93e971773&quot;,&quot;videoName&quot;:&quot;安家&quot;,&quot;startTime&quot;:1584428168000,&quot;endTime&quot;:1584448880000,&quot;watchMin&quot;:345,&quot;category&quot;:&quot;tv&quot;,&quot;type&quot;:&quot;都市&quot;,&quot;videoYear&quot;:&quot;2019&quot;,&quot;videoid&quot;:&quot;ihhsfwvvhcm16nd&quot;&#125;&#125;,&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;24&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;24&quot;,&quot;uuid&quot;:&quot;00073474735f76e892713bdb8f108dad&quot;,&quot;videoName&quot;:&quot;熊出没之夏日连连看&quot;,&quot;startTime&quot;:1584843069000,&quot;endTime&quot;:1584843369000,&quot;watchMin&quot;:5,&quot;category&quot;:&quot;shaoer&quot;,&quot;type&quot;:&quot;搞笑&#x2F;冒险&#x2F;益智&#x2F;亲子&quot;,&quot;videoYear&quot;:&quot;2016&quot;,&quot;videoid&quot;:&quot;m2lbjjlfidqc8iu&quot;&#125;&#125;,&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;25&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;25&quot;,&quot;uuid&quot;:&quot;0007974b19f8542293a14084bb1b2291&quot;,&quot;videoName&quot;:&quot;动物兄弟4&quot;,&quot;startTime&quot;:1584697627000,&quot;endTime&quot;:1584720380000,&quot;watchMin&quot;:379,&quot;category&quot;:&quot;暂无&quot;,&quot;type&quot;:&quot;暂无&quot;,&quot;videoYear&quot;:&quot;暂无&quot;,&quot;videoid&quot;:&quot;pr44q94ldv6rvg7&quot;&#125;&#125;,&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;26&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;26&quot;,&quot;uuid&quot;:&quot;0007974b19f8542293a14084bb1b2291&quot;,&quot;videoName&quot;:&quot;动物兄弟4&quot;,&quot;startTime&quot;:1584841582000,&quot;endTime&quot;:1584852218000,&quot;watchMin&quot;:177,&quot;category&quot;:&quot;暂无&quot;,&quot;type&quot;:&quot;暂无&quot;,&quot;videoYear&quot;:&quot;暂无&quot;,&quot;videoid&quot;:&quot;pr44q94ldv6rvg7&quot;&#125;&#125;,&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;29&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;29&quot;,&quot;uuid&quot;:&quot;0007d603734e047265c576b2d2a02127&quot;,&quot;videoName&quot;:&quot;刘老根3&quot;,&quot;startTime&quot;:1584963352000,&quot;endTime&quot;:1584966384000,&quot;watchMin&quot;:51,&quot;category&quot;:&quot;tv&quot;,&quot;type&quot;:&quot;言情&#x2F;剧情&#x2F;喜剧&quot;,&quot;videoYear&quot;:&quot;2020&quot;,&quot;videoid&quot;:&quot;mzc00200e08eido&quot;&#125;&#125;,&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;40&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;40&quot;,&quot;uuid&quot;:&quot;000bf328b762ef5f933c4eaedead6392&quot;,&quot;videoName&quot;:&quot;三字经&quot;,&quot;startTime&quot;:1584673750000,&quot;endTime&quot;:1584674053000,&quot;watchMin&quot;:5,&quot;category&quot;:&quot;shaoer&quot;,&quot;type&quot;:&quot;益智&quot;,&quot;videoYear&quot;:&quot;2016&quot;,&quot;videoid&quot;:&quot;5c5jvuof6yv1v05&quot;&#125;&#125;,&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;41&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;41&quot;,&quot;uuid&quot;:&quot;000bf328b762ef5f933c4eaedead6392&quot;,&quot;videoName&quot;:&quot;好尸植物大战僵尸1代对战模式&quot;,&quot;startTime&quot;:1584844672000,&quot;endTime&quot;:1584850039000,&quot;watchMin&quot;:90,&quot;category&quot;:&quot;zongyi&quot;,&quot;type&quot;:&quot;暂无&quot;,&quot;videoYear&quot;:&quot;2016&quot;,&quot;videoid&quot;:&quot;0olleg0z6dyyrha&quot;&#125;&#125;,&#123;&quot;_index&quot;:&quot;ghd&quot;,&quot;_type&quot;:&quot;MovieData&quot;,&quot;_id&quot;:&quot;44&quot;,&quot;_score&quot;:1.0,&quot;_source&quot;:&#123;&quot;id&quot;:&quot;44&quot;,&quot;uuid&quot;:&quot;000c1823640ba0bd2f9f73d8ff08de3e&quot;,&quot;videoName&quot;:&quot;动物兄弟5&quot;,&quot;startTime&quot;:1584669651000,&quot;endTime&quot;:1584671819000,&quot;watchMin&quot;:36,&quot;category&quot;:&quot;shaoer&quot;,&quot;type&quot;:&quot;暂无&quot;,&quot;videoYear&quot;:&quot;2018&quot;,&quot;videoid&quot;:&quot;x8g47d5bmxi4jlu&quot;&#125;&#125;]&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"一日内不同时段下，不同type的观影人数折线图。\"><a href=\"#一日内不同时段下，不同type的观影人数折线图。\" class=\"headerlink\" title=\"一日内不同时段下，不同type的观影人数折线图。\"></a>一日内不同时段下，不同type的观影人数折线图。</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//时间范围的设定</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (startTime != <span class=\"keyword\">null</span> &amp;&amp; endTime != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    QueryBuilders.rangeQuery(<span class=\"string\">\"startTime\"</span>).from(DateUtils.parseDate(startTime).getTime())</span><br><span class=\"line\">            .to(DateUtils.parseDate(endTime).getTime());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">SearchRequestBuilder searchRequestBuilder = client</span><br><span class=\"line\">        .prepareSearch(<span class=\"string\">\"ghd\"</span>).setTypes(<span class=\"string\">\"MovieData\"</span>)</span><br><span class=\"line\">        .setQuery(QueryBuilders.rangeQuery(<span class=\"string\">\"startTime\"</span>).from(DateUtils.parseDate(startTime).getTime())</span><br><span class=\"line\">                .to(DateUtils.parseDate(endTime).getTime()));</span><br><span class=\"line\"><span class=\"comment\">//创建TermsBuilder对象，使用term查询，设置该分组的名称为aggs-class，并根据aggsField字段进行分组</span></span><br><span class=\"line\">TermsAggregationBuilder termsBuilder = AggregationBuilders.terms(<span class=\"string\">\"typeTerms\"</span>)</span><br><span class=\"line\">        .field(<span class=\"string\">\"type\"</span>).order(BucketOrder.count(<span class=\"keyword\">false</span>)).size(DataSyncRunner.movieTotal);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//添加分组信息</span></span><br><span class=\"line\">searchRequestBuilder.addAggregation(termsBuilder);</span><br><span class=\"line\"><span class=\"comment\">//执行搜索</span></span><br><span class=\"line\">SearchResponse searchResponse = searchRequestBuilder.execute()</span><br><span class=\"line\">        .actionGet();</span><br><span class=\"line\"><span class=\"comment\">//解析返回数据，获取分组名称的数据</span></span><br><span class=\"line\">Terms videoNameTerms = searchResponse.getAggregations().get(<span class=\"string\">\"typeTerms\"</span>);</span><br><span class=\"line\">List&lt;? extends Terms.Bucket&gt; videoNameBuckets = videoNameTerms.getBuckets();</span><br><span class=\"line\"><span class=\"keyword\">for</span> (Terms.Bucket bucket : videoNameBuckets) &#123;</span><br><span class=\"line\">    map.put((String) bucket.getKey(),bucket.getDocCount());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"获取观影时长总数\"><a href=\"#获取观影时长总数\" class=\"headerlink\" title=\"获取观影时长总数\"></a>获取观影时长总数</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">SearchResponse response = client.prepareSearch(<span class=\"string\">\"ghd\"</span>).setTypes(<span class=\"string\">\"MovieData\"</span>)</span><br><span class=\"line\">        .addAggregation(AggregationBuilders.sum(<span class=\"string\">\"watchMinTerms\"</span>).field(<span class=\"string\">\"watchMin\"</span>))</span><br><span class=\"line\">        .get();</span><br><span class=\"line\">Sum sum = response.getAggregations().get(<span class=\"string\">\"watchMinTerms\"</span>);</span><br></pre></td></tr></table></figure>\n\n","categories":["java"],"tags":["elsticsearch"]},{"title":"nginx与tomcat实践https","url":"/2020/04/07/nginx%E4%B8%8Etomcat%E5%AE%9E%E8%B7%B5https/","content":"<h3 id=\"Nginx上实现https\"><a href=\"#Nginx上实现https\" class=\"headerlink\" title=\"Nginx上实现https\"></a>Nginx上实现https</h3><figure class=\"highlight\"><table><tr><td class=\"code\"><pre><span class=\"line\">#user  nobody;</span><br><span class=\"line\">worker_processes  1;</span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\">    </span><br><span class=\"line\">    #gzip  on;</span><br><span class=\"line\">  </span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">\t\tlisten       443 ssl;</span><br><span class=\"line\">\t\tserver_name  xxx.com;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tssl on;</span><br><span class=\"line\">\t\tssl_certificate \"ssl/xxx.com.pem\";</span><br><span class=\"line\">\t\tssl_certificate_key \"ssl/xxx.com.key\";</span><br><span class=\"line\">\t\tssl_session_cache    shared:SSL:1m;</span><br><span class=\"line\">    ssl_session_timeout  5m;</span><br><span class=\"line\">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。</span><br><span class=\"line\">    ssl_prefer_server_ciphers  on;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\tlocation / &#123;</span><br><span class=\"line\">\t\t\t proxy_set_header  X-Real-IP  $remote_addr;</span><br><span class=\"line\">\t     proxy_set_header Host $host;</span><br><span class=\"line\">\t\t\t proxy_pass http://127.0.0.1:8123/;</span><br><span class=\"line\">\t\t\t client_max_body_size    20m;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t\terror_page 404 /404.html;</span><br><span class=\"line\">\t\t\tlocation = /40x.html &#123;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t\terror_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">\t\t\tlocation = /50x.html &#123;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Tomcat上实现https\"><a href=\"#Tomcat上实现https\" class=\"headerlink\" title=\"Tomcat上实现https\"></a>Tomcat上实现https</h3><figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Server</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8067\"</span> <span class=\"attr\">shutdown</span>=<span class=\"string\">\"SHUTDOWN\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.startup.VersionLoggerListener\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!--APR library loader. Documentation at /docs/apr.html --&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.core.AprLifecycleListener\"</span> <span class=\"attr\">SSLEngine</span>=<span class=\"string\">\"on\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"comment\">&lt;!-- Prevent memory leaks due to use of particular java/javax APIs--&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.core.JreMemoryLeakPreventionListener\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Listener</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.core.ThreadLocalLeakPreventionListener\"</span> /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">GlobalNamingResources</span>&gt;</span></span><br><span class=\"line\">   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Resource</span> <span class=\"attr\">name</span>=<span class=\"string\">\"UserDatabase\"</span> <span class=\"attr\">auth</span>=<span class=\"string\">\"Container\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">type</span>=<span class=\"string\">\"org.apache.catalina.UserDatabase\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">description</span>=<span class=\"string\">\"User database that can be updated and saved\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">factory</span>=<span class=\"string\">\"org.apache.catalina.users.MemoryUserDatabaseFactory\"</span></span></span><br><span class=\"line\"><span class=\"tag\">              <span class=\"attr\">pathname</span>=<span class=\"string\">\"conf/tomcat-users.xml\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">GlobalNamingResources</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Service</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8123\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"HTTP/1.1\"</span></span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">connectionTimeout</span>=<span class=\"string\">\"20000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"443\"</span> /&gt;</span></span><br><span class=\"line\">  </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"443\"</span>   </span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">protocol</span>=<span class=\"string\">\"org.apache.coyote.http11.Http11NioProtocol\"</span>  </span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"150\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">SSLEnabled</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">SSLHostConfig</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">Certificate</span>       </span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">certificateKeystoreFile</span>=<span class=\"string\">\"/home/xxx.com.pfx\"</span>   </span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">certificateKeystorePassword</span>=<span class=\"string\">\"7QYARAtg\"</span>   </span></span><br><span class=\"line\"><span class=\"tag\">             <span class=\"attr\">certificateKeystoreType</span>=<span class=\"string\">\"PKCS12\"</span> /&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">SSLHostConfig</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Connector</span>&gt;</span></span><br><span class=\"line\">   </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Connector</span> <span class=\"attr\">port</span>=<span class=\"string\">\"8010\"</span> <span class=\"attr\">protocol</span>=<span class=\"string\">\"AJP/1.3\"</span> <span class=\"attr\">redirectPort</span>=<span class=\"string\">\"443\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"localhost\"</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"comment\">&lt;!-- Use the LockOutRealm to prevent attempts to guess user passwords</span></span><br><span class=\"line\"><span class=\"comment\">           via a brute-force attack --&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.realm.LockOutRealm\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- This Realm uses the UserDatabase configured in the global JNDI</span></span><br><span class=\"line\"><span class=\"comment\">             resources under the key \"UserDatabase\".  Any edits</span></span><br><span class=\"line\"><span class=\"comment\">             that are performed against this UserDatabase are immediately</span></span><br><span class=\"line\"><span class=\"comment\">             available for use by the Realm.  --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Realm</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.realm.UserDatabaseRealm\"</span></span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">resourceName</span>=<span class=\"string\">\"UserDatabase\"</span>/&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">Realm</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">Host</span> <span class=\"attr\">name</span>=<span class=\"string\">\"localhost\"</span>  <span class=\"attr\">appBase</span>=<span class=\"string\">\"webapps\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">unpackWARs</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">autoDeploy</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- SingleSignOn valve, share authentication between web applications</span></span><br><span class=\"line\"><span class=\"comment\">             Documentation at: /docs/config/valve.html --&gt;</span></span><br><span class=\"line\">        <span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">        &lt;Valve className=\"org.apache.catalina.authenticator.SingleSignOn\" /&gt;</span></span><br><span class=\"line\"><span class=\"comment\">        --&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\">&lt;!-- Access log processes all example.</span></span><br><span class=\"line\"><span class=\"comment\">             Documentation at: /docs/config/valve.html</span></span><br><span class=\"line\"><span class=\"comment\">             <span class=\"doctag\">Note:</span> The pattern used is equivalent to using pattern=\"common\" --&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.valves.AccessLogValve\"</span> <span class=\"attr\">directory</span>=<span class=\"string\">\"logs\"</span></span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">prefix</span>=<span class=\"string\">\"localhost_access_log\"</span> <span class=\"attr\">suffix</span>=<span class=\"string\">\".txt\"</span></span></span><br><span class=\"line\"><span class=\"tag\">               <span class=\"attr\">pattern</span>=<span class=\"string\">\"%h %l %u %t <span class=\"symbol\">&amp;quot;</span>%r<span class=\"symbol\">&amp;quot;</span> %s %b\"</span> /&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">Host</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">Engine</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Service</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Server</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n","categories":["linux"],"tags":["https"]},{"title":"非常好用的maven插件合集","url":"/2020/03/11/%E9%9D%9E%E5%B8%B8%E5%A5%BD%E7%94%A8%E7%9A%84maven%E6%8F%92%E4%BB%B6%E5%90%88%E9%9B%86/","content":"<h3 id=\"数据库版本控制\"><a href=\"#数据库版本控制\" class=\"headerlink\" title=\"数据库版本控制\"></a>数据库版本控制</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!-- 数据库版本管理 --&gt;</span><br><span class=\"line\">&lt;plugin&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.flywaydb&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;flyway-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;4.2.0&lt;&#x2F;version&gt;</span><br><span class=\"line\">    &lt;configuration&gt;</span><br><span class=\"line\">        &lt;url&gt;$&#123;flyway.db.url&#125;&lt;&#x2F;url&gt;</span><br><span class=\"line\">        &lt;user&gt;$&#123;flyway.db.user&#125;&lt;&#x2F;user&gt;</span><br><span class=\"line\">        &lt;password&gt;$&#123;flyway.db.password&#125;&lt;&#x2F;password&gt;</span><br><span class=\"line\">    &lt;&#x2F;configuration&gt;</span><br><span class=\"line\">&lt;&#x2F;plugin&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"代码检查插件\"><a href=\"#代码检查插件\" class=\"headerlink\" title=\"代码检查插件\"></a>代码检查插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!--代码检查插件--&gt;</span><br><span class=\"line\">&lt;plugin&gt;</span><br><span class=\"line\">    &lt;groupId&gt;com.github.spotbugs&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spotbugs-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">    &lt;version&gt;3.1.12.2&lt;&#x2F;version&gt;</span><br><span class=\"line\">    &lt;dependencies&gt;</span><br><span class=\"line\">        &lt;dependency&gt;</span><br><span class=\"line\">            &lt;groupId&gt;com.github.spotbugs&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">            &lt;artifactId&gt;spotbugs&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">            &lt;version&gt;4.0.0&lt;&#x2F;version&gt;</span><br><span class=\"line\">        &lt;&#x2F;dependency&gt;</span><br><span class=\"line\">    &lt;&#x2F;dependencies&gt;</span><br><span class=\"line\">&lt;&#x2F;plugin&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"打包插件\"><a href=\"#打包插件\" class=\"headerlink\" title=\"打包插件\"></a>打包插件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;plugin&gt;</span><br><span class=\"line\">    &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;</span><br><span class=\"line\">    &lt;artifactId&gt;spring-boot-maven-plugin&lt;&#x2F;artifactId&gt;</span><br><span class=\"line\">&lt;&#x2F;plugin&gt;</span><br></pre></td></tr></table></figure>","categories":["java"],"tags":["maven"]},{"title":"一次明白什么是JVM","url":"/2020/03/02/jvm/","content":"<h2 id=\"什么是类加载\"><a href=\"#什么是类加载\" class=\"headerlink\" title=\"什么是类加载\"></a>什么是类加载</h2><p>当程序主动使用某个类时，如果该类还未被加载到内存中，则JVM会通过加载，连接，初始化三个步骤来对该类进行初始化。如果没有意外，JVM将会连续完成三个步骤，所以有时也会把这三个步骤统称为类加载或类初始化。</p>\n<h3 id=\"类的加载\"><a href=\"#类的加载\" class=\"headerlink\" title=\"类的加载\"></a>类的加载</h3><blockquote>\n<ol>\n<li>在java代码中，<strong>类型</strong>的加载，连接，与初始化过程都是在<strong>程序运行期间</strong>完成的。（类从磁盘加载到内存中经历的三个阶段）</li>\n<li>提供了更大的灵活性，增加了更多的可能性。</li>\n</ol>\n</blockquote>\n<h4 id=\"什么是类型？？\"><a href=\"#什么是类型？？\" class=\"headerlink\" title=\"什么是类型？？\"></a>什么是类型？？</h4><blockquote>\n<p>定义的类，接口或者枚举称为类型而不涉及对象，在类加载过程中，是创建对象之前的一些信息。</p>\n</blockquote>\n<h4 id=\"什么是程序运行期间？？\"><a href=\"#什么是程序运行期间？？\" class=\"headerlink\" title=\"什么是程序运行期间？？\"></a>什么是程序运行期间？？</h4><blockquote>\n<p>程序运行期间完成典型例子就是动态代理，其实很多语言都是在编译期就完成了加载，也正是因为这个特性给java程序提供了更大的灵活性，增加了更多的可能性。</p>\n</blockquote>\n<h3 id=\"类加载注意事项\"><a href=\"#类加载注意事项\" class=\"headerlink\" title=\"类加载注意事项\"></a>类加载注意事项</h3><ol>\n<li>类加载器并不需要等到某个类被<strong>首次主动使用</strong>时再加载它。（首次使用下面会有详细解释）</li>\n<li>JVM规范允许类加载器在预料某个类将要被使用时，就预先加载它。</li>\n<li>如果预加载过程中遇到了<code>.class</code>文件缺失或存在错误，类加载器必须在程序<strong>首次主动使用</strong>该类时才报告错误（<code>LinkageError错误</code>）。如果这个类一直没有被程序主动使用，那么类加载器就不会报告错误。</li>\n</ol>\n<h3 id=\"类的生命周期\"><a href=\"#类的生命周期\" class=\"headerlink\" title=\"类的生命周期\"></a>类的生命周期</h3><p>加载—&gt;<strong>验证</strong>—&gt;<strong>准备</strong>—&gt;<strong>解析</strong>—&gt;初始化—&gt;使用—&gt;卸载</p>\n<p>类从被加载到虚拟机内存中开始，到卸载出内存为止，它的整个生命周期包括七个阶段，而<strong>验证，准备，解析</strong>这三个阶段，统称为<strong>连接</strong>。</p>\n<p>加载，验证，准备，初始化和卸载这五个阶段的顺序是固定确定的，类的加载过程必须按照这种顺序<strong>开始</strong>。</p>\n<p>而<strong>解析阶段不一定</strong>，它在某些情况下可以在初始化后再开始，这是为了支持Java语言的运行时绑定。（Java的动态绑定）</p>\n<h4 id=\"1-加载\"><a href=\"#1-加载\" class=\"headerlink\" title=\"1.加载\"></a>1.加载</h4><blockquote>\n<p>加载阶段是加载类的第一个阶段！类的加载过程就是从加载阶段开始的！</p>\n</blockquote>\n<p>加载阶段是指将类<code>.class</code>文件中的二进制数据读入到内存中，将其放在运行时数据区的方法区内，然后在堆区创建一个<code>java.lang.Class</code>对象（JVM规范并未说明Class对象位于哪里，Hotpot虚拟机将其放在方法区内），用来封装类在方法区内的数据结构。类的加载的最终产品是位于堆区中的<code>Class</code>对象，Class对象封装了类在方法区内的数据结构，并且向Java程序员提供了访问方法区内数据结构的接口。</p>\n<p><strong>Class对象是放在堆区中的，不是放在方法区中的</strong>，类的元数据才是放在方法区的。【元数据并不是类的Class对象，Class对象是类加载的最终产品，类的方法代码，变量名，方法名，访问权限，返回值等等都是在方法区的。】</p>\n<p>class字节码—&gt;类加载器—&gt;方法区中运行时数据—&gt;Class对象—&gt;外部可通过Class对象，作为操作类的入口。</p>\n<blockquote>\n<p>编写一个新的java类时，JVM就会帮我们编译成class对象，存放在同名的.class文件中。在运行时，当需要生成这个类的对象，JVM就会检查此类是否已经装载内存中。若没有装载，则把.class文件装载到内存中。若是装载，则根据class文件生成实例对象。</p>\n</blockquote>\n<p><strong>怎么理解Class对象与new出来的对象之间的关系呢？</strong></p>\n<p>new出来的对象以<code>car</code>为例。可以把<code>car</code>的<code>Class</code>类看成具体的一个人，而<code>new car</code>则是人物映像，具体的一个人（<code>Class</code>）是唯一的，人物映像（<code>new car</code>)是多个的。镜子中的每个人物映像都是根据具体的人映造出来的，也就是说<strong>每个new出来的对象都是以Class类为模版参照出来的</strong>，为什么可以参照呢，是因为Class对象提供了访问方法区内的数据结构的接口。</p>\n<p>加载阶段简而言之：</p>\n<p>.class文件，二进制数据—&gt;读取到内存—&gt;数据放在方法区—&gt;堆内创建对应Class对象—&gt;并提供访问方法区的接口</p>\n<p><strong>加载.calss文件的方式:</strong><br>类的加载由类加载器完成，类加载器通常由JVM提供，这些类加载器也是前面所有程序运行的基础，JVM提供的这些类加载器通常被称为系统类加载器。除此之外，开发者可以通过继承ClassLoader基类来创建自己的类加载器。通过使用不同的类加载器，可以从不同来源加载类的二进制数据，二进制数据通常有如下几种来源：</p>\n<p>（1）从本地系统中直接加载<br>（2）通过网络下载.class文件<br>（3）从zip，jar等归档文件中加载.class文件<br>（4）从专用数据库中提取.class文件<br>（5）将java源文件动态编译为.class文件</p>\n","categories":["java"],"tags":["JVM"]},{"title":"lambda表达式详细介绍","url":"/2020/02/23/lambda%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"<h2 id=\"Lambda表达式概述\"><a href=\"#Lambda表达式概述\" class=\"headerlink\" title=\"Lambda表达式概述\"></a>Lambda表达式概述</h2><h3 id=\"什么是Lambda\"><a href=\"#什么是Lambda\" class=\"headerlink\" title=\"什么是Lambda\"></a>什么是Lambda</h3><ul>\n<li>Lambda表达式也被称为箭头函数，匿名函数，闭bao。</li>\n<li>Lambda表达式体现的是轻量级函数式编程思想。</li>\n<li>‘-&gt;’符号式Lambda表达式核心操作符号，符号左侧是操作参数，符号右侧是操作表达式。</li>\n<li>Lambda表达式是<strong>JDK8新特性</strong>，可以运行在jdk8及以上的运行环境。</li>\n</ul>\n<h3 id=\"Model-Code-as-Data\"><a href=\"#Model-Code-as-Data\" class=\"headerlink\" title=\"Model Code as Data\"></a>Model Code as Data</h3><ul>\n<li>Model Code as Data,编码及数据，尽可能轻量级的将代码封装为数据。</li>\n<li>解决方案：接口&amp;实现类（匿名内部类）</li>\n<li>存在问题：语法亢余，this关键字，变量捕获，数据控制等。</li>\n</ul>\n<h3 id=\"项目问题：功能接口的设计与优化\"><a href=\"#项目问题：功能接口的设计与优化\" class=\"headerlink\" title=\"项目问题：功能接口的设计与优化\"></a>项目问题：功能接口的设计与优化</h3><ul>\n<li>需求环境：线程类的创建</li>\n<li>解决方案：匿名内部类实现</li>\n</ul>\n<h4 id=\"项目实践\"><a href=\"#项目实践\" class=\"headerlink\" title=\"项目实践\"></a>项目实践</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//传统模式下创建新线程</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Thread(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        System.out.println( <span class=\"string\">\"Threading....\"</span>+Thread.currentThread().getId() );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;).start();</span><br><span class=\"line\"><span class=\"comment\">//JDK8新特性，lambda表达式，优化线程模式</span></span><br><span class=\"line\"><span class=\"keyword\">new</span> Thread(()-&gt;System.out.println(<span class=\"string\">\"Lambda Threading....\"</span>+Thread.currentThread().getId())).start();</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"为什么使用Lambda表达式\"><a href=\"#为什么使用Lambda表达式\" class=\"headerlink\" title=\"为什么使用Lambda表达式\"></a>为什么使用Lambda表达式</h3><ul>\n<li>它不是解决未知问题的新技术。</li>\n<li>对现有解决方案的语义化优化。</li>\n<li>需要根据实际需求考虑性能问题。</li>\n</ul>\n<h2 id=\"Lambda表达式基本语法\"><a href=\"#Lambda表达式基本语法\" class=\"headerlink\" title=\"Lambda表达式基本语法\"></a>Lambda表达式基本语法</h2><h3 id=\"函数式接口-function-interface\"><a href=\"#函数式接口-function-interface\" class=\"headerlink\" title=\"函数式接口(function interface)\"></a>函数式接口(function interface)</h3><ul>\n<li>函数式接口，就是java类型系统中的接口。</li>\n<li>函数式接口，是只包含一个接口方法的特殊接口，。</li>\n<li>语义化检测注解：@Functionallnterface</li>\n</ul>\n<h4 id=\"实例\"><a href=\"#实例\" class=\"headerlink\" title=\"实例\"></a>实例</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Author:liqian</span></span><br><span class=\"line\"><span class=\"comment\"> * Date:2020/2/23</span></span><br><span class=\"line\"><span class=\"comment\"> * Desc: 用户身份认证接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span> <span class=\"comment\">//只能提供一个未实现接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IUserAuth</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 通过账号，验证用户身份信息接口</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> username 要验证的用户账号</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 返回身份信息</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">vertifyUser</span><span class=\"params\">(String username)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Author:liqian</span></span><br><span class=\"line\"><span class=\"comment\"> * Date:2020/2/23</span></span><br><span class=\"line\"><span class=\"comment\"> * Desc:消息传输格式化接口</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IUserMessage</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 消息转化方法</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message 要转换的消息</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> format 转换的格式（xml，json。。）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 返回转换的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">format</span><span class=\"params\">(String message,String format)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"使用规则\"><a href=\"#使用规则\" class=\"headerlink\" title=\"使用规则\"></a>使用规则</h4><ul>\n<li>默认方法</li>\n<li>静态接口方法</li>\n</ul>\n<h4 id=\"代码示范\"><a href=\"#代码示范\" class=\"headerlink\" title=\"代码示范\"></a>代码示范</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@FunctionalInterface</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">IUserMessage</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 消息转化方法</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> message 要转换的消息</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> format 转换的格式（xml，json。。）</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 返回转换的数据</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">format</span><span class=\"params\">(String message,String format)</span></span>;</span><br><span class=\"line\">    <span class=\"function\">String <span class=\"title\">toString</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">boolean</span> <span class=\"title\">vertifyMessage</span><span class=\"params\">(String msg)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (msg!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserMessageImpl</span> <span class=\"keyword\">implements</span> <span class=\"title\">IUserMessage</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">format</span><span class=\"params\">(String message, String format)</span> </span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"消息转换....\"</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> message;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">String msg = <span class=\"string\">\"Hello world\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (IUserMessage.vertifyMessage(msg))&#123;</span><br><span class=\"line\">    IUserMessage iUserMessage = <span class=\"keyword\">new</span> UserMessageImpl();</span><br><span class=\"line\">    iUserMessage.format(<span class=\"string\">\"hello\"</span>,<span class=\"string\">\"json\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Lambda表达式与函数式接口的关系\"><a href=\"#Lambda表达式与函数式接口的关系\" class=\"headerlink\" title=\"Lambda表达式与函数式接口的关系\"></a>Lambda表达式与函数式接口的关系</h3><ul>\n<li>函数式接口，只包含一个操作方法。</li>\n<li>Lambda表达式，只能操作一个方法。</li>\n<li>Java中Lambda表达式，核心就是一个函数式接口的实现。</li>\n</ul>\n<h4 id=\"代码示范-1\"><a href=\"#代码示范-1\" class=\"headerlink\" title=\"代码示范\"></a>代码示范</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//匿名内部类实现接口的抽象方法</span></span><br><span class=\"line\">IUserAuth iUserAuth1 = <span class=\"keyword\">new</span> IUserAuth() &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">vertifyUser</span><span class=\"params\">(String username)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"admin\"</span>.equals(username)?<span class=\"string\">\"管理员\"</span>:<span class=\"string\">\"会员\"</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//Lambda表达式</span></span><br><span class=\"line\">IUserAuth iUserAuth2 = (String username)-&gt;&#123;<span class=\"keyword\">return</span>  <span class=\"string\">\"admin\"</span>.equals(username)?<span class=\"string\">\"lbd管理员\"</span>:<span class=\"string\">\"lbd会员\"</span>;&#125;;</span><br><span class=\"line\">System.out.println(iUserAuth2.vertifyUser(<span class=\"string\">\"admin\"</span>));</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"JDK中常见的函数式接口\"><a href=\"#JDK中常见的函数式接口\" class=\"headerlink\" title=\"JDK中常见的函数式接口\"></a>JDK中常见的函数式接口</h3><ul>\n<li>java.lang.Runable</li>\n<li>java.lang.Comparable</li>\n<li>java.lang.Comparator</li>\n<li>java.io.FileFilter</li>\n<li>more….</li>\n</ul>\n<blockquote>\n<p>Java8提供了java.util.function包，提供了常用的函数式功能接口。</p>\n</blockquote>\n<h4 id=\"案例\"><a href=\"#案例\" class=\"headerlink\" title=\"案例\"></a>案例</h4><h5 id=\"验证一个参数是否合法性-Predicate\"><a href=\"#验证一个参数是否合法性-Predicate\" class=\"headerlink\" title=\"验证一个参数是否合法性 Predicate\"></a>验证一个参数是否合法性 Predicate<T></h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Predicate&lt;String&gt; pre = (String username)-&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"admin\"</span>.equals(username);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">System.out.println(pre.test(<span class=\"string\">\"admin\"</span>));</span><br><span class=\"line\">System.out.println(pre.test(<span class=\"string\">\"manager\"</span>));</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"接口一个参数，不返回任何结果-Consumer\"><a href=\"#接口一个参数，不返回任何结果-Consumer\" class=\"headerlink\" title=\"接口一个参数，不返回任何结果 Consumer\"></a>接口一个参数，不返回任何结果 Consumer<T></h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Consumer&lt;String&gt; consumer = (String message) -&gt; &#123;</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"接收到参数\"</span>+message);</span><br><span class=\"line\">    System.out.println(<span class=\"string\">\"消息发送完成\"</span>);</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">consumer.accept(<span class=\"string\">\"hello world\"</span>);</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"接收参数对象T，返回结果对象R-Function-lt-T-R-gt\"><a href=\"#接收参数对象T，返回结果对象R-Function-lt-T-R-gt\" class=\"headerlink\" title=\"接收参数对象T，返回结果对象R Function&lt;T,R&gt;\"></a>接收参数对象T，返回结果对象R Function&lt;T,R&gt;</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Function&lt;String,Integer&gt; fun = (String gender) -&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">\"male\"</span>.equals(gender)?<span class=\"number\">1</span>:<span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">System.out.println(fun.apply(<span class=\"string\">\"male\"</span>));</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"不接受参数，提供T对象的创建工厂-Supplier\"><a href=\"#不接受参数，提供T对象的创建工厂-Supplier\" class=\"headerlink\" title=\"不接受参数，提供T对象的创建工厂 Supplier\"></a>不接受参数，提供T对象的创建工厂 Supplier<T></h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Supplier&lt;String&gt; sup = () -&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> UUID.randomUUID().toString();</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">System.out.println(sup.get());</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"接收参数对象T，返回结果对象T-UnaryOperator\"><a href=\"#接收参数对象T，返回结果对象T-UnaryOperator\" class=\"headerlink\" title=\"接收参数对象T，返回结果对象T UnaryOperator\"></a>接收参数对象T，返回结果对象T UnaryOperator<T></h5><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">UnaryOperator&lt;String&gt; uo &#x3D; (String image)-&gt;&#123;</span><br><span class=\"line\">    image +&#x3D;&quot;[100*200]&quot;;</span><br><span class=\"line\">    return image;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">System.out.println(uo.apply(&quot;原图片--&quot;));</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"接收两个T对象，返回一个T对象的处理结果-BinaryOperator\"><a href=\"#接收两个T对象，返回一个T对象的处理结果-BinaryOperator\" class=\"headerlink\" title=\"接收两个T对象，返回一个T对象的处理结果 BinaryOperator\"></a>接收两个T对象，返回一个T对象的处理结果 BinaryOperator<T></h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">BinaryOperator&lt;Integer&gt; bo = (Integer i1,Integer i2)-&gt;&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> i1&gt;i2?i1:i2;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">System.out.println(bo.apply(<span class=\"number\">12</span>,<span class=\"number\">13</span>));</span><br></pre></td></tr></table></figure>","categories":["java"],"tags":["lambda"]},{"title":"cesium三维引擎笔录","url":"/2020/02/20/cesium%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/","content":"<h1 id=\"Cesium-引擎学习\"><a href=\"#Cesium-引擎学习\" class=\"headerlink\" title=\"Cesium 引擎学习\"></a>Cesium 引擎学习</h1><h2 id=\"Qt-WebSocket通信\"><a href=\"#Qt-WebSocket通信\" class=\"headerlink\" title=\"Qt WebSocket通信\"></a>Qt WebSocket通信</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">new QWebChannel(qt.webChannelTransport, function (channel) &#123;</span><br><span class=\"line\">        &#x2F;&#x2F;绑定Qt端注册对象，需要与Qt注册方名字保持一致</span><br><span class=\"line\">           interactObj &#x3D; channel.objects.interactObj;</span><br><span class=\"line\">           if (interactObj.JSSendError)</span><br><span class=\"line\">               interactObj.JSSendError(&quot;testeteeeeee&quot;);</span><br><span class=\"line\">           &#x2F;&#x2F;Web connect the Qt signal,then Qt can call &quot;output&quot; function</span><br><span class=\"line\">           interactObj.SigSendMessageToJS.connect(function (str) &#123;</span><br><span class=\"line\">               try &#123;</span><br><span class=\"line\">                   var date &#x3D; new Date();</span><br><span class=\"line\">                   var cmd &#x3D; str.substring(0, 3);</span><br><span class=\"line\">                   console.log(&#96;数据接收指令：$&#123;cmd&#125;，完成时间&#96; + date.toLocaleString());</span><br><span class=\"line\">                   if (transport.receive[cmd]) &#123;</span><br><span class=\"line\">                       if (typeof transport.receive[cmd] &#x3D;&#x3D; &quot;function&quot;) &#123;</span><br><span class=\"line\">                           var data &#x3D; str.substr(3);</span><br><span class=\"line\">                           transport.receive[cmd](data);</span><br><span class=\"line\">                       &#125;</span><br><span class=\"line\">                   &#125; else &#123;</span><br><span class=\"line\">                       console.log(&#96;接收指令：$&#123;cmd&#125;，但是未找到对应的处理模块&#96;);</span><br><span class=\"line\">                   &#125;</span><br><span class=\"line\">               &#125; catch (error) &#123;</span><br><span class=\"line\">                   addLog(&#96;接收数据$&#123;str&#125;,数据指令处理出错，错误：$&#123;error&#125;&#96;)</span><br><span class=\"line\">                   alert(&quot;数据指令处理出错,错误原因：&quot;+error);</span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">               return</span><br><span class=\"line\">           &#125;);</span><br><span class=\"line\">        &#125;);</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"初始化三维地图\"><a href=\"#初始化三维地图\" class=\"headerlink\" title=\"初始化三维地图\"></a>初始化三维地图</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"CesiumContainer\"</span>&gt;&lt;<span class=\"regexp\">/div&gt; </span></span><br><span class=\"line\"><span class=\"regexp\">viewer = new Cesium.Viewer('CesiumContainer', &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">        infoBox: false, /</span><span class=\"regexp\">/是否显示点击要素之后显示的信息</span></span><br><span class=\"line\"><span class=\"regexp\">        selectionIndicator: false, /</span><span class=\"regexp\">/是否显示投影方式控件</span></span><br><span class=\"line\"><span class=\"regexp\">        timeline: true, /</span><span class=\"regexp\">/是否显示时间线控件</span></span><br><span class=\"line\"><span class=\"regexp\">        animation: true, /</span><span class=\"regexp\">/是否显示动画空间</span></span><br><span class=\"line\"><span class=\"regexp\">        navigation: true,/</span><span class=\"regexp\">/是否显示信息控件</span></span><br><span class=\"line\"><span class=\"regexp\">        shouldAnimate: false</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;);</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加载地形侧影\"><a href=\"#加载地形侧影\" class=\"headerlink\" title=\"加载地形侧影\"></a>加载地形侧影</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> layer=<span class=\"keyword\">new</span> Cesium.MapboxImageryProvider(&#123;</span><br><span class=\"line\">        mapId: <span class=\"string\">'mapbox.streets'</span>,</span><br><span class=\"line\">        accessToken: <span class=\"string\">'pk.eyJ1IjoibGlxaWFuOTciLCJhIjoiY2sybWw5Y3ZvMGo0YzNtdDVocGNuZnAyYiJ9.4szlvVdzJhZsYjyNCFxtJQ'</span></span><br><span class=\"line\">    &#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加载三维模型\"><a href=\"#加载三维模型\" class=\"headerlink\" title=\"加载三维模型\"></a>加载三维模型</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> tileset = viewer.scene.primitives.add(<span class=\"keyword\">new</span> Cesium.Cesium3DTileset(&#123;</span><br><span class=\"line\">        url: <span class=\"string\">'http://ys.liqian.fun:8181/an_3dtiles/tileset.json'</span>,</span><br><span class=\"line\">        <span class=\"comment\">//classificationType:Cesium.ClassificationType.TERRAIN //地形侧影</span></span><br><span class=\"line\">&#125;));</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"加载三维场景\"><a href=\"#加载三维场景\" class=\"headerlink\" title=\"加载三维场景\"></a>加载三维场景</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">scene.open(<span class=\"string\">\"http://192.168.2.150:8090/iserver/services/3D-chengdushuangliu1231/rest/realspace\"</span>).</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第一人称视角\"><a href=\"#第一人称视角\" class=\"headerlink\" title=\"第一人称视角\"></a>第一人称视角</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">scope.viewer.camera.setView(&#123;</span><br><span class=\"line\">  destination: pos,</span><br><span class=\"line\">  orientation: headingpitchroll</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">scope.viewer.camera.lookAtTransform(Cesium.Matrix4.IDENTITY)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"自由视角\"><a href=\"#自由视角\" class=\"headerlink\" title=\"自由视角\"></a>自由视角</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">viewer.camera.lookAtTransform(Cesium.Matrix4.IDENTITY) <span class=\"comment\">//视角</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"清除kml数据\"><a href=\"#清除kml数据\" class=\"headerlink\" title=\"清除kml数据\"></a>清除kml数据</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> removeDatasources=viewer.dataSources._dataSources.filter(<span class=\"function\"><span class=\"params\">t</span>=&gt;</span>t.name.indexOf(<span class=\"string\">'kmldataSourcexxx'</span>)&gt;<span class=\"number\">-1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">  removeDatasources.forEach(<span class=\"function\"><span class=\"params\">t</span>=&gt;</span>&#123;</span><br><span class=\"line\">    viewer.dataSources.remove(t,<span class=\"literal\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"导入kml数据\"><a href=\"#导入kml数据\" class=\"headerlink\" title=\"导入kml数据\"></a>导入kml数据</h2><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"> <span class=\"keyword\">var</span> reader = <span class=\"keyword\">new</span> FileReader();<span class=\"comment\">//new一个FileReader实例</span></span><br><span class=\"line\">                reader.onload=<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span>(flyline)&#123;</span><br><span class=\"line\">                        flyline.impotKMLDatasource(e.target.result,<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e</span>)</span>&#123;</span><br><span class=\"line\">                            $(<span class=\"string\">'#fileselect'</span>).val(<span class=\"string\">''</span>);</span><br><span class=\"line\">                            $(<span class=\"string\">\"#loading\"</span>).hide();</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">reader.readAsDataURL(<span class=\"keyword\">this</span>.files[<span class=\"number\">0</span>]);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"拓展\"><a href=\"#拓展\" class=\"headerlink\" title=\"拓展\"></a>拓展</h2><h3 id=\"加载geojson数据，可拓展飞行边界\"><a href=\"#加载geojson数据，可拓展飞行边界\" class=\"headerlink\" title=\"加载geojson数据，可拓展飞行边界\"></a>加载geojson数据，可拓展飞行边界</h3><p><a href=\"http://geojson.io/#map=2/52.9/59.1\" target=\"_blank\" rel=\"noopener\">http://geojson.io/#map=2/52.9/59.1</a></p>\n<h3 id=\"Cesium加载图片\"><a href=\"#Cesium加载图片\" class=\"headerlink\" title=\"Cesium加载图片\"></a>Cesium加载图片</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">viewer.entities.add(&#123;</span><br><span class=\"line\">                position: poi,</span><br><span class=\"line\">                billboard: &#123;</span><br><span class=\"line\">                    width:<span class=\"number\">50</span>,</span><br><span class=\"line\">                    height:<span class=\"number\">50</span>,</span><br><span class=\"line\">                    image: <span class=\"string\">''</span>,</span><br><span class=\"line\">                    show: <span class=\"literal\">true</span>, <span class=\"comment\">// default</span></span><br><span class=\"line\">                    horizontalOrigin: Cesium.HorizontalOrigin.RIGHT,</span><br><span class=\"line\">                    distanceDisplayCondition : <span class=\"keyword\">new</span> Cesium.DistanceDisplayCondition(<span class=\"number\">0.0</span>, <span class=\"number\">1000.0</span>)</span><br><span class=\"line\">                    <span class=\"comment\">//verticalOrigin: Cesium.VerticalOrigin.BOTTOM,</span></span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">                properties: d <span class=\"comment\">//图片信息数据，json格式</span></span><br><span class=\"line\">            &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Cesium加载gltf模型\"><a href=\"#Cesium加载gltf模型\" class=\"headerlink\" title=\"Cesium加载gltf模型\"></a>Cesium加载gltf模型</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">viewer.entities.add(&#123;</span><br><span class=\"line\">               name : <span class=\"string\">\"\"</span>,</span><br><span class=\"line\">                position: Cesium.Cartesian3.fromDegrees(<span class=\"built_in\">Number</span>(d.x), <span class=\"built_in\">Number</span>(d.y), <span class=\"built_in\">Number</span>(d.alt) + <span class=\"number\">60</span>),</span><br><span class=\"line\">                model: &#123;</span><br><span class=\"line\">                    scale: <span class=\"number\">1</span>,</span><br><span class=\"line\">                    silhouetteColor:Cesium.Color.CYAN,</span><br><span class=\"line\">                    silhouetteSize: <span class=\"number\">0</span>,</span><br><span class=\"line\">                    <span class=\"comment\">//color:Cesium.Color.RED,</span></span><br><span class=\"line\">                    uri: <span class=\"string\">'./static/data/model/green.gltf'</span>,</span><br><span class=\"line\">                    minimumPixelSize: <span class=\"number\">128</span>,</span><br><span class=\"line\">                    maximumScale: <span class=\"number\">20000</span>,</span><br><span class=\"line\">                   distanceDisplayCondition:<span class=\"keyword\">new</span> Cesium.DistanceDisplayCondition(<span class=\"number\">10.0</span>, <span class=\"number\">300.0</span>)</span><br><span class=\"line\">                &#125;,</span><br><span class=\"line\">               properties: d</span><br><span class=\"line\">            &#125;);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"围绕某个位置进行飞行\"><a href=\"#围绕某个位置进行飞行\" class=\"headerlink\" title=\"围绕某个位置进行飞行\"></a>围绕某个位置进行飞行</h3><figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">rotateByPoint: <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">viewer, t</span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.roate=!<span class=\"keyword\">this</span>.roate</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.position=t; <span class=\"comment\">//坐标</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.distance = Cesium.Cartesian3.distance(t, viewer.camera.positionWC);</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.angle = <span class=\"number\">10</span>;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> time = viewer.clock.currentTime.clone();</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.heading = viewer.camera.heading;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.pitch = <span class=\"number\">-0.97</span><span class=\"comment\">//viewer.camera.pitch;</span></span><br><span class=\"line\">            <span class=\"keyword\">var</span> $<span class=\"keyword\">this</span>=<span class=\"keyword\">this</span></span><br><span class=\"line\">            <span class=\"keyword\">this</span>.viewer.clock.onTick.addEventListener(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> ti =Cesium.JulianDate.secondsDifference(<span class=\"keyword\">this</span>.viewer.clock.currentTime,time),</span><br><span class=\"line\">                    i = Cesium.Math.toRadians(ti *<span class=\"number\">10</span>) + <span class=\"number\">3</span>;</span><br><span class=\"line\">                <span class=\"built_in\">console</span>.log(<span class=\"keyword\">this</span>.pitch)</span><br><span class=\"line\">                <span class=\"keyword\">if</span>($<span class=\"keyword\">this</span>.roate)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">this</span>.viewer.scene.camera.setView(</span><br><span class=\"line\">                        &#123;</span><br><span class=\"line\">                            destination: t,</span><br><span class=\"line\">                            orientation: &#123;</span><br><span class=\"line\">                                heading: i,</span><br><span class=\"line\">                                roll:<span class=\"number\">6.283185182050259</span>,</span><br><span class=\"line\">                                pitch: <span class=\"number\">-0.97</span></span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                ),</span><br><span class=\"line\">                        <span class=\"comment\">// this.viewer.scene.camera.moveBackward(this.distance )</span></span><br><span class=\"line\">                        <span class=\"keyword\">this</span>.viewer.scene.camera.moveBackward(<span class=\"number\">200</span>)</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                &#125;, <span class=\"keyword\">this</span>);</span><br><span class=\"line\">        &#125;,</span><br></pre></td></tr></table></figure>\n\n","categories":["3D"],"tags":["cesium"]},{"title":"作为开发不得不知道的linux常用命令","url":"/2019/04/20/%E4%BD%9C%E4%B8%BA%E5%BC%80%E5%8F%91%E4%B8%8D%E5%BE%97%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%84linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","content":"<blockquote>\n<p>这篇文章翻译自 <a href=\"http://www.thegeekstuff.com/2010/11/50-linux-commands/\" target=\"_blank\" rel=\"noopener\">http://www.thegeekstuff.com/2010/11/50-linux-commands</a> 这些都是一些很常用的命令，这篇文章中每个命令都有一些简单的示例说明它的用法， 对于想学习Unix/Linux的人，这些命令基本上都是需要掌握的。</p>\n</blockquote>\n<h2 id=\"1-tar\"><a href=\"#1-tar\" class=\"headerlink\" title=\"1. tar\"></a>1. tar</h2><h3 id=\"创建一个新的tar文件\"><a href=\"#创建一个新的tar文件\" class=\"headerlink\" title=\"创建一个新的tar文件\"></a>创建一个新的tar文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ tar cvf archive_name.tar dirname&#x2F;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解压tar文件\"><a href=\"#解压tar文件\" class=\"headerlink\" title=\"解压tar文件\"></a>解压tar文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ tar xvf archive_name.tar</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看tar文件\"><a href=\"#查看tar文件\" class=\"headerlink\" title=\"查看tar文件\"></a>查看tar文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ tar tvf archive_name.tar</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2010/04/unix-tar-command-examples/\" target=\"_blank\" rel=\"noopener\">The Ultimate Tar Command Tutorial with 10 Practical Examples</a><a href=\"http://www.thegeekstuff.com/2010/04/unix-tar-command-examples/\" target=\"_blank\" rel=\"noopener\">http://www.thegeekstuff.com/2010/04/unix-tar-command-examples/</a>)</p>\n<h2 id=\"2-grep\"><a href=\"#2-grep\" class=\"headerlink\" title=\"2. grep\"></a>2. grep</h2><h3 id=\"在文件中查找字符串-不区分大小写\"><a href=\"#在文件中查找字符串-不区分大小写\" class=\"headerlink\" title=\"在文件中查找字符串(不区分大小写)\"></a>在文件中查找字符串(不区分大小写)</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ grep -i &quot;the&quot; demo_file</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"输出成功匹配的行，以及该行之后的三行\"><a href=\"#输出成功匹配的行，以及该行之后的三行\" class=\"headerlink\" title=\"输出成功匹配的行，以及该行之后的三行\"></a>输出成功匹配的行，以及该行之后的三行</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ grep -A 3 -i &quot;example&quot; demo_text</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在一个文件夹中递归查询包含指定字符串的文件\"><a href=\"#在一个文件夹中递归查询包含指定字符串的文件\" class=\"headerlink\" title=\"在一个文件夹中递归查询包含指定字符串的文件\"></a>在一个文件夹中递归查询包含指定字符串的文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ grep -r &quot;ramesh&quot; *</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/03/15-practical-unix-grep-command-examples/\" target=\"_blank\" rel=\"noopener\">Get a Grip on the Grep! – 15 Practical Grep Command Examples</a></p>\n<h2 id=\"3-find\"><a href=\"#3-find\" class=\"headerlink\" title=\"3. find\"></a>3. find</h2><h3 id=\"查找指定文件名的文件-不区分大小写\"><a href=\"#查找指定文件名的文件-不区分大小写\" class=\"headerlink\" title=\"查找指定文件名的文件(不区分大小写)\"></a>查找指定文件名的文件(不区分大小写)</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ find -iname &quot;MyProgram.c&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"对找到的文件执行某个命令\"><a href=\"#对找到的文件执行某个命令\" class=\"headerlink\" title=\"对找到的文件执行某个命令\"></a>对找到的文件执行某个命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ find -iname &quot;MyProgram.c&quot; -exec md5sum &#123;&#125; \\;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查找home目录下的所有空文件\"><a href=\"#查找home目录下的所有空文件\" class=\"headerlink\" title=\"查找home目录下的所有空文件\"></a>查找home目录下的所有空文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ find ~ -empty</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/03/15-practical-linux-find-command-examples/\" target=\"_blank\" rel=\"noopener\">Mommy, I found it! — 15 Practical Linux Find Command Examples</a></p>\n<h2 id=\"4-ssh\"><a href=\"#4-ssh\" class=\"headerlink\" title=\"4. ssh\"></a>4. ssh</h2><h3 id=\"登录到远程主机\"><a href=\"#登录到远程主机\" class=\"headerlink\" title=\"登录到远程主机\"></a>登录到远程主机</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ssh -l jsmith remotehost.example.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"调试ssh客户端\"><a href=\"#调试ssh客户端\" class=\"headerlink\" title=\"调试ssh客户端\"></a>调试ssh客户端</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ssh -v -l jsmith remotehost.example.com</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"显示ssh客户端版本\"><a href=\"#显示ssh客户端版本\" class=\"headerlink\" title=\"显示ssh客户端版本\"></a>显示ssh客户端版本</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ssh -V</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2008/05/5-basic-linux-ssh-client-commands/\" target=\"_blank\" rel=\"noopener\">5 Basic Linux SSH Client Commands</a></p>\n<h2 id=\"5-sed\"><a href=\"#5-sed\" class=\"headerlink\" title=\"5. sed\"></a>5. sed</h2><h3 id=\"当你将Dos系统中的文件复制到Unix-Linux后，这个文件每行都会以-r-n结尾，sed可以轻易将其转换为Unix格式的文件，使用-n结尾的文件\"><a href=\"#当你将Dos系统中的文件复制到Unix-Linux后，这个文件每行都会以-r-n结尾，sed可以轻易将其转换为Unix格式的文件，使用-n结尾的文件\" class=\"headerlink\" title=\"当你将Dos系统中的文件复制到Unix/Linux后，这个文件每行都会以\\r\\n结尾，sed可以轻易将其转换为Unix格式的文件，使用\\n结尾的文件\"></a>当你将Dos系统中的文件复制到Unix/Linux后，这个文件每行都会以\\r\\n结尾，sed可以轻易将其转换为Unix格式的文件，使用\\n结尾的文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sed &#39;s&#x2F;.$&#x2F;&#x2F;&#39; filename</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"反转文件内容并输出\"><a href=\"#反转文件内容并输出\" class=\"headerlink\" title=\"反转文件内容并输出\"></a>反转文件内容并输出</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sed -n &#39;1!G; h; p&#39; filename</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"为非空行添加行号\"><a href=\"#为非空行添加行号\" class=\"headerlink\" title=\"为非空行添加行号\"></a>为非空行添加行号</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sed &#39;&#x2F;.&#x2F;&#x3D;&#39; thegeekstuff.txt | sed &#39;N; s&#x2F;\\n&#x2F; &#x2F;&#39;</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/10/unix-sed-tutorial-advanced-sed-substitution-examples/\" target=\"_blank\" rel=\"noopener\">Advanced Sed Substitution Examples</a></p>\n<h2 id=\"6-awk\"><a href=\"#6-awk\" class=\"headerlink\" title=\"6. awk\"></a>6. awk</h2><h3 id=\"删除重复行\"><a href=\"#删除重复行\" class=\"headerlink\" title=\"删除重复行\"></a>删除重复行</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ awk &#39;!($0 in array) &#123; array[$0]; print&#125;&#39; temp</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"打印-etc-passwd中所有包含同样的uid和gid的行\"><a href=\"#打印-etc-passwd中所有包含同样的uid和gid的行\" class=\"headerlink\" title=\"打印/etc/passwd中所有包含同样的uid和gid的行\"></a>打印/etc/passwd中所有包含同样的uid和gid的行</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ awk -F &#39;:&#39; &#39;$3&#x3D;$4&#39; &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"打印文件中的指定部分的字段\"><a href=\"#打印文件中的指定部分的字段\" class=\"headerlink\" title=\"打印文件中的指定部分的字段\"></a>打印文件中的指定部分的字段</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ awk &#39;&#123;print $2,$5;&#125;&#39; employee.txt</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2010/01/8-powerful-awk-built-in-variables-fs-ofs-rs-ors-nr-nf-filename-fnr/\" target=\"_blank\" rel=\"noopener\">8 Powerful Awk Built-in Variables – FS, OFS, RS, ORS, NR, NF, FILENAME, FNR</a></p>\n<h2 id=\"7-vim\"><a href=\"#7-vim\" class=\"headerlink\" title=\"7. vim\"></a>7. vim</h2><h3 id=\"打开文件并跳到第10行\"><a href=\"#打开文件并跳到第10行\" class=\"headerlink\" title=\"打开文件并跳到第10行\"></a>打开文件并跳到第10行</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vim +10 filename.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"打开文件跳到第一个匹配的行\"><a href=\"#打开文件跳到第一个匹配的行\" class=\"headerlink\" title=\"打开文件跳到第一个匹配的行\"></a>打开文件跳到第一个匹配的行</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vim +&#x2F;search-term filename.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"以只读模式打开文件\"><a href=\"#以只读模式打开文件\" class=\"headerlink\" title=\"以只读模式打开文件\"></a>以只读模式打开文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ vim -R &#x2F;etc&#x2F;passwd</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/01/vi-and-vim-macro-tutorial-how-to-record-and-play/\" target=\"_blank\" rel=\"noopener\">How To Record and Play in Vim Editor</a></p>\n<h2 id=\"8-diff\"><a href=\"#8-diff\" class=\"headerlink\" title=\"8. diff\"></a>8. diff</h2><h3 id=\"比较的时候忽略空白符\"><a href=\"#比较的时候忽略空白符\" class=\"headerlink\" title=\"比较的时候忽略空白符\"></a>比较的时候忽略空白符</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ diff -w name_list.txt name_list_new.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9-sort\"><a href=\"#9-sort\" class=\"headerlink\" title=\"9. sort\"></a>9. sort</h2><h3 id=\"以升序对文件内容排序\"><a href=\"#以升序对文件内容排序\" class=\"headerlink\" title=\"以升序对文件内容排序\"></a>以升序对文件内容排序</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sort names.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"以降序对文件内容排序\"><a href=\"#以降序对文件内容排序\" class=\"headerlink\" title=\"以降序对文件内容排序\"></a>以降序对文件内容排序</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sort -r names.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"以第三个字段对-etc-passwd的内容排序\"><a href=\"#以第三个字段对-etc-passwd的内容排序\" class=\"headerlink\" title=\"以第三个字段对/etc/passwd的内容排序\"></a>以第三个字段对/etc/passwd的内容排序</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ sort -t: -k 3n &#x2F;etc&#x2F;passwd | more</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-export\"><a href=\"#10-export\" class=\"headerlink\" title=\"10. export\"></a>10. export</h2><h3 id=\"输出跟字符串oracle匹配的环境变量\"><a href=\"#输出跟字符串oracle匹配的环境变量\" class=\"headerlink\" title=\"输出跟字符串oracle匹配的环境变量\"></a>输出跟字符串oracle匹配的环境变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ export | grep ORCALE</span><br><span class=\"line\">declare -x ORACLE_BASE&#x3D;&quot;&#x2F;u01&#x2F;app&#x2F;oracle&quot;</span><br><span class=\"line\">declare -x ORACLE_HOME&#x3D;&quot;&#x2F;u01&#x2F;app&#x2F;oracle&#x2F;product&#x2F;10.2.0&quot;</span><br><span class=\"line\">declare -x ORACLE_SID&#x3D;&quot;med&quot;</span><br><span class=\"line\">declare -x ORACLE_TERM&#x3D;&quot;xterm&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置全局环境变量\"><a href=\"#设置全局环境变量\" class=\"headerlink\" title=\"设置全局环境变量\"></a>设置全局环境变量</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ export ORACLE_HOME&#x3D;&#x2F;u01&#x2F;app&#x2F;oracle&#x2F;product&#x2F;10.2.0</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11-xargs\"><a href=\"#11-xargs\" class=\"headerlink\" title=\"11. xargs\"></a>11. xargs</h2><h3 id=\"将所有图片文件拷贝到外部驱动器\"><a href=\"#将所有图片文件拷贝到外部驱动器\" class=\"headerlink\" title=\"将所有图片文件拷贝到外部驱动器\"></a>将所有图片文件拷贝到外部驱动器</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ls *.jpg | xargs -n1 -i cp &#123;&#125; &#x2F;external-hard-drive&#x2F;directory</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"将系统中所有jpd文件压缩打包\"><a href=\"#将系统中所有jpd文件压缩打包\" class=\"headerlink\" title=\"将系统中所有jpd文件压缩打包\"></a>将系统中所有jpd文件压缩打包</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ find &#x2F; -name *.jpg -type f -print | xargs tar -cvzf images.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下载文件中列出的所有url对应的页面\"><a href=\"#下载文件中列出的所有url对应的页面\" class=\"headerlink\" title=\"下载文件中列出的所有url对应的页面\"></a>下载文件中列出的所有url对应的页面</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cat url-list.txt | xargs wget –c</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-ls\"><a href=\"#12-ls\" class=\"headerlink\" title=\"12. ls\"></a>12. ls</h2><h3 id=\"以易读的方式显示文件大小-显示为MB-GB…\"><a href=\"#以易读的方式显示文件大小-显示为MB-GB…\" class=\"headerlink\" title=\"以易读的方式显示文件大小(显示为MB,GB…)\"></a>以易读的方式显示文件大小(显示为MB,GB…)</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ls -lh</span><br><span class=\"line\">-rw-r----- 1 ramesh team-dev 8.9M Jun 12 15:27 arch-linux.txt.gz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"以最后修改时间升序列出文件\"><a href=\"#以最后修改时间升序列出文件\" class=\"headerlink\" title=\"以最后修改时间升序列出文件\"></a>以最后修改时间升序列出文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ls -ltr</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在文件名后面显示文件类型\"><a href=\"#在文件名后面显示文件类型\" class=\"headerlink\" title=\"在文件名后面显示文件类型\"></a>在文件名后面显示文件类型</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ls -F</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/07/linux-ls-command-examples/\" target=\"_blank\" rel=\"noopener\">Unix LS Command: 15 Practical Examples</a></p>\n<h2 id=\"13-pwd\"><a href=\"#13-pwd\" class=\"headerlink\" title=\"13. pwd\"></a>13. pwd</h2><h3 id=\"输出当前工作目录\"><a href=\"#输出当前工作目录\" class=\"headerlink\" title=\"输出当前工作目录\"></a>输出当前工作目录</h3><h2 id=\"14-cd\"><a href=\"#14-cd\" class=\"headerlink\" title=\"14. cd\"></a>14. cd</h2><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd -可以在最近工作的两个目录间切换</span><br></pre></td></tr></table></figure>\n\n<p>使用 <strong>shopt -s cdspell</strong> 可以设置自动对 cd 命令进行拼写检查</p>\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2008/10/6-awesome-linux-cd-command-hacks-productivity-tip3-for-geeks/\" target=\"_blank\" rel=\"noopener\">6 Awesome Linux cd command Hacks</a></p>\n<h2 id=\"15-gzip\"><a href=\"#15-gzip\" class=\"headerlink\" title=\"15. gzip\"></a>15. gzip</h2><h3 id=\"创建一个-gz-的压缩文件\"><a href=\"#创建一个-gz-的压缩文件\" class=\"headerlink\" title=\"创建一个 *.gz 的压缩文件\"></a>创建一个 <code>*.gz</code> 的压缩文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ gzip test.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解压-gz-文件\"><a href=\"#解压-gz-文件\" class=\"headerlink\" title=\"解压 *.gz 文件\"></a>解压 <code>*.gz</code> 文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ gzip -d test.txt.gz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"显示压缩的比率\"><a href=\"#显示压缩的比率\" class=\"headerlink\" title=\"显示压缩的比率\"></a>显示压缩的比率</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ gzip -l *.gz</span><br><span class=\"line\">     compressed        uncompressed  ratio uncompressed_name</span><br><span class=\"line\">          23709               97975  75.8% asp-patch-rpms.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"16-bzip2\"><a href=\"#16-bzip2\" class=\"headerlink\" title=\"16. bzip2\"></a>16. bzip2</h2><h3 id=\"创建-bz2-压缩文件\"><a href=\"#创建-bz2-压缩文件\" class=\"headerlink\" title=\"创建 *.bz2 压缩文件\"></a>创建 <code>*.bz2</code> 压缩文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ bzip2 test.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"解压-bz2-文件\"><a href=\"#解压-bz2-文件\" class=\"headerlink\" title=\"解压 *.bz2 文件\"></a>解压 <code>*.bz2</code> 文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">bzip2 -d test.txt.bz2</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2010/10/bzcommand-examples/\" target=\"_blank\" rel=\"noopener\">BZ is Eazy! bzip2, bzgrep, bzcmp, bzdiff, bzcat, bzless, bzmore examples</a></p>\n<h2 id=\"17-uzip\"><a href=\"#17-uzip\" class=\"headerlink\" title=\"17. uzip\"></a>17. uzip</h2><h3 id=\"解压-zip-文件\"><a href=\"#解压-zip-文件\" class=\"headerlink\" title=\"解压 *.zip 文件\"></a>解压 <code>*.zip</code> 文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ unzip test.zip</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看-zip-文件的内容\"><a href=\"#查看-zip-文件的内容\" class=\"headerlink\" title=\"查看 *.zip 文件的内容\"></a>查看 <code>*.zip</code> 文件的内容</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ unzip -l jasper.zip</span><br><span class=\"line\">Archive:  jasper.zip</span><br><span class=\"line\">Length     Date   Time    Name</span><br><span class=\"line\">--------    ----   ----    ----</span><br><span class=\"line\">40995  11-30-98 23:50   META-INF&#x2F;MANIFEST.MF</span><br><span class=\"line\">32169  08-25-98 21:07   classes_</span><br><span class=\"line\">15964  08-25-98 21:07   classes_names</span><br><span class=\"line\">10542  08-25-98 21:07   classes_ncomp</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"18-shutdown\"><a href=\"#18-shutdown\" class=\"headerlink\" title=\"18. shutdown\"></a>18. shutdown</h2><h3 id=\"关闭系统并立即关机\"><a href=\"#关闭系统并立即关机\" class=\"headerlink\" title=\"关闭系统并立即关机\"></a>关闭系统并立即关机</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ shutdown -h now</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"10分钟后关机\"><a href=\"#10分钟后关机\" class=\"headerlink\" title=\"10分钟后关机\"></a>10分钟后关机</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ shutdown -h +10</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ shutdown -r now</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重启期间强制进行系统检查\"><a href=\"#重启期间强制进行系统检查\" class=\"headerlink\" title=\"重启期间强制进行系统检查\"></a>重启期间强制进行系统检查</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ shutdown -Fr now</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"19-ftp\"><a href=\"#19-ftp\" class=\"headerlink\" title=\"19. ftp\"></a>19. ftp</h2><h3 id=\"ftp命令和sftp命令的用法基本相似连接ftp服务器并下载多个文件\"><a href=\"#ftp命令和sftp命令的用法基本相似连接ftp服务器并下载多个文件\" class=\"headerlink\" title=\"ftp命令和sftp命令的用法基本相似连接ftp服务器并下载多个文件\"></a>ftp命令和sftp命令的用法基本相似连接ftp服务器并下载多个文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ftp IP&#x2F;hostname</span><br><span class=\"line\">ftp&gt; mget *.html</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"显示远程主机上文件列表\"><a href=\"#显示远程主机上文件列表\" class=\"headerlink\" title=\"显示远程主机上文件列表\"></a>显示远程主机上文件列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ftp&gt; mls *.html -</span><br><span class=\"line\">&#x2F;ftptest&#x2F;features.html</span><br><span class=\"line\">&#x2F;ftptest&#x2F;index.html</span><br><span class=\"line\">&#x2F;ftptest&#x2F;othertools.html</span><br><span class=\"line\">&#x2F;ftptest&#x2F;samplereport.html</span><br><span class=\"line\">&#x2F;ftptest&#x2F;usage.html</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2010/06/ftp-sftp-tutorial/\" target=\"_blank\" rel=\"noopener\">FTP and SFTP Beginners Guide with 10 Examples</a></p>\n<h2 id=\"20-crontab\"><a href=\"#20-crontab\" class=\"headerlink\" title=\"20. crontab\"></a>20. crontab</h2><h3 id=\"查看某个用户的-crontab-入口\"><a href=\"#查看某个用户的-crontab-入口\" class=\"headerlink\" title=\"查看某个用户的 crontab 入口\"></a>查看某个用户的 <code>crontab</code> 入口</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ crontab -u john -l</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"设置一个每十分钟执行一次的计划任务\"><a href=\"#设置一个每十分钟执行一次的计划任务\" class=\"headerlink\" title=\"设置一个每十分钟执行一次的计划任务\"></a>设置一个每十分钟执行一次的计划任务</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">*&#x2F;10 * * * * &#x2F;home&#x2F;ramesh&#x2F;check-disk-space</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/06/15-practical-crontab-examples/\" target=\"_blank\" rel=\"noopener\">Linux Crontab: 15 Awesome Cron Job Examples</a></p>\n<h2 id=\"21-service\"><a href=\"#21-service\" class=\"headerlink\" title=\"21. service\"></a>21. service</h2><p>service 命令用于运行 System V init 脚本，这些脚本一般位于/etc/init.d文件下，这个命令可以直接运行这个文件夹里面的脚本，而不用加上路径</p>\n<h3 id=\"查看服务状态\"><a href=\"#查看服务状态\" class=\"headerlink\" title=\"查看服务状态\"></a>查看服务状态</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ service ssh status</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看所有服务状态\"><a href=\"#查看所有服务状态\" class=\"headerlink\" title=\"查看所有服务状态\"></a>查看所有服务状态</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ service --status-all</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"重启服务\"><a href=\"#重启服务\" class=\"headerlink\" title=\"重启服务\"></a>重启服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ service ssh restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"22-ps\"><a href=\"#22-ps\" class=\"headerlink\" title=\"22. ps\"></a>22. ps</h2><p>ps命令用于显示正在运行中的进程的信息，ps命令有很多选项，这里只列出了几个</p>\n<h3 id=\"查看当前正在运行的所有进程\"><a href=\"#查看当前正在运行的所有进程\" class=\"headerlink\" title=\"查看当前正在运行的所有进程\"></a>查看当前正在运行的所有进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ps -ef | more</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"以树状结构显示当前正在运行的进程，H选项表示显示进程的层次结构\"><a href=\"#以树状结构显示当前正在运行的进程，H选项表示显示进程的层次结构\" class=\"headerlink\" title=\"以树状结构显示当前正在运行的进程，H选项表示显示进程的层次结构\"></a>以树状结构显示当前正在运行的进程，H选项表示显示进程的层次结构</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ps -efH | more</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"23-free\"><a href=\"#23-free\" class=\"headerlink\" title=\"23. free\"></a>23. free</h2><p>这个命令用于显示系统当前内存的使用情况，包括已用内存、可用内存和交换内存的情况</p>\n<h3 id=\"默认情况下free会以字节为单位输出内存的使用量\"><a href=\"#默认情况下free会以字节为单位输出内存的使用量\" class=\"headerlink\" title=\"默认情况下free会以字节为单位输出内存的使用量\"></a>默认情况下free会以字节为单位输出内存的使用量</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ free</span><br><span class=\"line\">             total       used       free     shared    buffers     cached</span><br><span class=\"line\">Mem:       3566408    1580220    1986188          0     203988     902960</span><br><span class=\"line\">-&#x2F;+ buffers&#x2F;cache:     473272    3093136</span><br><span class=\"line\">Swap:      4000176          0    4000176</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如果你想以其他单位输出内存的使用量，需要加一个选项，-g为GB，-m为MB，-k为KB，-b为字节\"><a href=\"#如果你想以其他单位输出内存的使用量，需要加一个选项，-g为GB，-m为MB，-k为KB，-b为字节\" class=\"headerlink\" title=\"如果你想以其他单位输出内存的使用量，需要加一个选项，-g为GB，-m为MB，-k为KB，-b为字节\"></a>如果你想以其他单位输出内存的使用量，需要加一个选项，-g为GB，-m为MB，-k为KB，-b为字节</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ free -g</span><br><span class=\"line\">             total       used       free     shared    buffers     cached</span><br><span class=\"line\">Mem:             3          1          1          0          0          0</span><br><span class=\"line\">-&#x2F;+ buffers&#x2F;cache:          0          2</span><br><span class=\"line\">Swap:            3          0          3</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如果你想查看所有内存的汇总，请使用-t选项，使用这个选项会在输出中加一个汇总行\"><a href=\"#如果你想查看所有内存的汇总，请使用-t选项，使用这个选项会在输出中加一个汇总行\" class=\"headerlink\" title=\"如果你想查看所有内存的汇总，请使用-t选项，使用这个选项会在输出中加一个汇总行\"></a>如果你想查看所有内存的汇总，请使用-t选项，使用这个选项会在输出中加一个汇总行</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">ramesh@ramesh-laptop:~$ free -t</span><br><span class=\"line\">             total       used       free     shared    buffers     cached</span><br><span class=\"line\">Mem:       3566408    1592148    1974260          0     204260     912556</span><br><span class=\"line\">-&#x2F;+ buffers&#x2F;cache:     475332    3091076</span><br><span class=\"line\">Swap:      4000176          0    4000176</span><br><span class=\"line\">Total:     7566584    1592148    5974436</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"24-top\"><a href=\"#24-top\" class=\"headerlink\" title=\"24. top\"></a>24. top</h2><p>top命令会显示当前系统中占用资源最多的一些进程（默认以CPU占用率排序）如果你想改变排序方式，可以在结果列表中点击O（大写字母O）会显示所有可用于排序的列，这个时候你就可以选择你想排序的列</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">Current Sort Field:  P  for window 1:Def</span><br><span class=\"line\">Select sort field via field letter, type any other key to return</span><br><span class=\"line\"></span><br><span class=\"line\">  a: PID        &#x3D; Process Id              v: nDRT       &#x3D; Dirty Pages count</span><br><span class=\"line\">  d: UID        &#x3D; User Id                 y: WCHAN      &#x3D; Sleeping in Function</span><br><span class=\"line\">  e: USER       &#x3D; User Name               z: Flags      &#x3D; Task Flags</span><br><span class=\"line\">  ........</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"如果只想显示某个特定用户的进程，可以使用-u选项\"><a href=\"#如果只想显示某个特定用户的进程，可以使用-u选项\" class=\"headerlink\" title=\"如果只想显示某个特定用户的进程，可以使用-u选项\"></a>如果只想显示某个特定用户的进程，可以使用-u选项</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ top -u oracle</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2010/01/15-practical-unix-linux-top-command-examples/\" target=\"_blank\" rel=\"noopener\">Can You Top This? 15 Practical Linux Top Command Examples</a></p>\n<h2 id=\"25-df\"><a href=\"#25-df\" class=\"headerlink\" title=\"25. df\"></a>25. df</h2><h3 id=\"显示文件系统的磁盘使用情况，默认情况下df-k-将以字节为单位输出磁盘的使用量\"><a href=\"#显示文件系统的磁盘使用情况，默认情况下df-k-将以字节为单位输出磁盘的使用量\" class=\"headerlink\" title=\"显示文件系统的磁盘使用情况，默认情况下df -k 将以字节为单位输出磁盘的使用量\"></a>显示文件系统的磁盘使用情况，默认情况下df -k 将以字节为单位输出磁盘的使用量</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ df -k</span><br><span class=\"line\">Filesystem           1K-blocks      Used Available Use% Mounted on</span><br><span class=\"line\">&#x2F;dev&#x2F;sda1             29530400   3233104  24797232  12% &#x2F;</span><br><span class=\"line\">&#x2F;dev&#x2F;sda2            120367992  50171596  64082060  44% &#x2F;home</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-h-选项可以以更符合阅读习惯的方式显示磁盘使用量\"><a href=\"#使用-h-选项可以以更符合阅读习惯的方式显示磁盘使用量\" class=\"headerlink\" title=\"使用 -h 选项可以以更符合阅读习惯的方式显示磁盘使用量\"></a>使用 <code>-h</code> 选项可以以更符合阅读习惯的方式显示磁盘使用量</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ df -h</span><br><span class=\"line\">Filesystem                  Size   Used  Avail Capacity  iused      ifree %iused  Mounted on</span><br><span class=\"line\">&#x2F;dev&#x2F;disk0s2               232Gi   84Gi  148Gi    37% 21998562   38864868   36%   &#x2F;</span><br><span class=\"line\">devfs                      187Ki  187Ki    0Bi   100%      648          0  100%   &#x2F;dev</span><br><span class=\"line\">map -hosts                   0Bi    0Bi    0Bi   100%        0          0  100%   &#x2F;net</span><br><span class=\"line\">map auto_home                0Bi    0Bi    0Bi   100%        0          0  100%   &#x2F;home</span><br><span class=\"line\">&#x2F;dev&#x2F;disk0s4               466Gi   45Gi  421Gi    10%   112774  440997174    0%   &#x2F;Volumes&#x2F;BOOTCAMP</span><br><span class=\"line\">&#x2F;&#x2F;app@izenesoft.cn&#x2F;public  2.7Ti  1.3Ti  1.4Ti    48%        0 18446744073709551615    0%   &#x2F;Volumes&#x2F;public</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-T-选项显示文件系统类型\"><a href=\"#使用-T-选项显示文件系统类型\" class=\"headerlink\" title=\"使用 -T 选项显示文件系统类型\"></a>使用 <code>-T</code> 选项显示文件系统类型</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ df -T</span><br><span class=\"line\">Filesystem    Type   1K-blocks      Used Available Use% Mounted on</span><br><span class=\"line\">&#x2F;dev&#x2F;sda1     ext4    29530400   3233120  24797216  12% &#x2F;</span><br><span class=\"line\">&#x2F;dev&#x2F;sda2     ext4   120367992  50171596  64082060  44% &#x2F;home</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"26-kill\"><a href=\"#26-kill\" class=\"headerlink\" title=\"26. kill\"></a>26. kill</h2><h3 id=\"kill-用于终止一个进程。一般我们会先用ps-ef查找某个进程得到它的进程号，然后再使用kill-9-进程号终止该进程。你还可以使用killall、pkill、xkill来终止进程\"><a href=\"#kill-用于终止一个进程。一般我们会先用ps-ef查找某个进程得到它的进程号，然后再使用kill-9-进程号终止该进程。你还可以使用killall、pkill、xkill来终止进程\" class=\"headerlink\" title=\"kill 用于终止一个进程。一般我们会先用ps -ef查找某个进程得到它的进程号，然后再使用kill -9 进程号终止该进程。你还可以使用killall、pkill、xkill来终止进程\"></a>kill 用于终止一个进程。一般我们会先用ps -ef查找某个进程得到它的进程号，然后再使用kill -9 进程号终止该进程。你还可以使用killall、pkill、xkill来终止进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ps -ef | grep vim</span><br><span class=\"line\">ramesh    7243  7222  9 22:43 pts&#x2F;2    00:00:00 vim</span><br><span class=\"line\"></span><br><span class=\"line\">$ kill -9 7243</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/12/4-ways-to-kill-a-process-kill-killall-pkill-xkill/\" target=\"_blank\" rel=\"noopener\">4 Ways to Kill a Process – kill, killall, pkill, xkill</a></p>\n<h2 id=\"27-rm\"><a href=\"#27-rm\" class=\"headerlink\" title=\"27. rm\"></a>27. rm</h2><h3 id=\"删除文件前先确认\"><a href=\"#删除文件前先确认\" class=\"headerlink\" title=\"删除文件前先确认\"></a>删除文件前先确认</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ rm -i filename.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"在文件名中使用shell的元字符会非常有用。删除文件前先打印文件名并进行确认\"><a href=\"#在文件名中使用shell的元字符会非常有用。删除文件前先打印文件名并进行确认\" class=\"headerlink\" title=\"在文件名中使用shell的元字符会非常有用。删除文件前先打印文件名并进行确认\"></a>在文件名中使用shell的元字符会非常有用。删除文件前先打印文件名并进行确认</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ rm -i file*</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"递归删除文件夹下所有文件，并删除该文件夹\"><a href=\"#递归删除文件夹下所有文件，并删除该文件夹\" class=\"headerlink\" title=\"递归删除文件夹下所有文件，并删除该文件夹\"></a>递归删除文件夹下所有文件，并删除该文件夹</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ rm -r example</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"28-cp\"><a href=\"#28-cp\" class=\"headerlink\" title=\"28. cp\"></a>28. cp</h2><h3 id=\"拷贝文件1到文件2，并保持文件的权限、属主和时间戳\"><a href=\"#拷贝文件1到文件2，并保持文件的权限、属主和时间戳\" class=\"headerlink\" title=\"拷贝文件1到文件2，并保持文件的权限、属主和时间戳\"></a>拷贝文件1到文件2，并保持文件的权限、属主和时间戳</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cp -p file1 file2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"拷贝file1到file2，如果file2存在会提示是否覆盖\"><a href=\"#拷贝file1到file2，如果file2存在会提示是否覆盖\" class=\"headerlink\" title=\"拷贝file1到file2，如果file2存在会提示是否覆盖\"></a>拷贝file1到file2，如果file2存在会提示是否覆盖</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cp -i file1 file2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"29-mv\"><a href=\"#29-mv\" class=\"headerlink\" title=\"29. mv\"></a>29. mv</h2><h3 id=\"将文件名file1重命名为file2，如果file2存在则提示是否覆盖\"><a href=\"#将文件名file1重命名为file2，如果file2存在则提示是否覆盖\" class=\"headerlink\" title=\"将文件名file1重命名为file2，如果file2存在则提示是否覆盖\"></a>将文件名file1重命名为file2，如果file2存在则提示是否覆盖</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mv -i file1 file2</span><br></pre></td></tr></table></figure>\n\n<p>注意如果使用-f选项则不会进行提示</p>\n<p>-v会输出重命名的过程，当文件名中包含通配符时，这个选项会非常方便</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mv -v file1 file2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"30-cat\"><a href=\"#30-cat\" class=\"headerlink\" title=\"30. cat\"></a>30. cat</h2><h3 id=\"你可以一次查看多个文件的内容，下面的命令会先打印file1的内容，然后打印file2的内容\"><a href=\"#你可以一次查看多个文件的内容，下面的命令会先打印file1的内容，然后打印file2的内容\" class=\"headerlink\" title=\"你可以一次查看多个文件的内容，下面的命令会先打印file1的内容，然后打印file2的内容\"></a>你可以一次查看多个文件的内容，下面的命令会先打印file1的内容，然后打印file2的内容</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cat file1 file2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"n命令可以在每行的前面加上行号\"><a href=\"#n命令可以在每行的前面加上行号\" class=\"headerlink\" title=\"-n命令可以在每行的前面加上行号\"></a>-n命令可以在每行的前面加上行号</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ cat -n &#x2F;etc&#x2F;logrotate.conf</span><br><span class=\"line\">&#x2F;var&#x2F;log&#x2F;btmp &#123;</span><br><span class=\"line\">missingok</span><br><span class=\"line\">3\t    monthly</span><br><span class=\"line\">4\t    create 0660 root utmp</span><br><span class=\"line\">5\t    rotate 1</span><br><span class=\"line\">6 &#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"31-mount\"><a href=\"#31-mount\" class=\"headerlink\" title=\"31. mount\"></a>31. mount</h2><h3 id=\"如果要挂载一个文件系统，需要先创建一个目录，然后将这个文件系统挂载到这个目录上\"><a href=\"#如果要挂载一个文件系统，需要先创建一个目录，然后将这个文件系统挂载到这个目录上\" class=\"headerlink\" title=\"如果要挂载一个文件系统，需要先创建一个目录，然后将这个文件系统挂载到这个目录上\"></a>如果要挂载一个文件系统，需要先创建一个目录，然后将这个文件系统挂载到这个目录上</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># mkdir &#x2F;u01</span><br><span class=\"line\"></span><br><span class=\"line\"># mount &#x2F;dev&#x2F;sdb1 &#x2F;u01</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"也可以把它添加到fstab中进行自动挂载，这样任何时候系统重启的时候，文件系统都会被加载\"><a href=\"#也可以把它添加到fstab中进行自动挂载，这样任何时候系统重启的时候，文件系统都会被加载\" class=\"headerlink\" title=\"也可以把它添加到fstab中进行自动挂载，这样任何时候系统重启的时候，文件系统都会被加载\"></a>也可以把它添加到fstab中进行自动挂载，这样任何时候系统重启的时候，文件系统都会被加载</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x2F;dev&#x2F;sdb1 &#x2F;u01 ext2 defaults 0 2</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"32-chmod\"><a href=\"#32-chmod\" class=\"headerlink\" title=\"32. chmod\"></a>32. chmod</h2><h3 id=\"chmod用于改变文件和目录的权限\"><a href=\"#chmod用于改变文件和目录的权限\" class=\"headerlink\" title=\"chmod用于改变文件和目录的权限\"></a>chmod用于改变文件和目录的权限</h3><p>给指定文件的属主和属组所有权限(包括读、写、执行)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ chmod ug+rwx file.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除指定文件的属组的所有权限\"><a href=\"#删除指定文件的属组的所有权限\" class=\"headerlink\" title=\"删除指定文件的属组的所有权限\"></a>删除指定文件的属组的所有权限</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ chmod g-rwx file.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改目录的权限，以及递归修改目录下面所有文件和子目录的权限\"><a href=\"#修改目录的权限，以及递归修改目录下面所有文件和子目录的权限\" class=\"headerlink\" title=\"修改目录的权限，以及递归修改目录下面所有文件和子目录的权限\"></a>修改目录的权限，以及递归修改目录下面所有文件和子目录的权限</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ chmod -R ug+rwx file.txt</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2010/06/chmod-command-examples/\" target=\"_blank\" rel=\"noopener\">7 Chmod Command Examples for Beginners</a></p>\n<h2 id=\"33-chown\"><a href=\"#33-chown\" class=\"headerlink\" title=\"33. chown\"></a>33. chown</h2><p>chown用于改变文件属主和属组</p>\n<h3 id=\"同时将某个文件的属主改为oracle，属组改为db\"><a href=\"#同时将某个文件的属主改为oracle，属组改为db\" class=\"headerlink\" title=\"同时将某个文件的属主改为oracle，属组改为db\"></a>同时将某个文件的属主改为oracle，属组改为db</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ chown oracle:dba dbora.sh</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-R选项对目录和目录下的文件进行递归修改\"><a href=\"#使用-R选项对目录和目录下的文件进行递归修改\" class=\"headerlink\" title=\"使用-R选项对目录和目录下的文件进行递归修改\"></a>使用-R选项对目录和目录下的文件进行递归修改</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ chown -R oracle:dba &#x2F;home&#x2F;oracle</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"34-passwd\"><a href=\"#34-passwd\" class=\"headerlink\" title=\"34. passwd\"></a>34. passwd</h2><h3 id=\"passwd用于在命令行修改密码，使用这个命令会要求你先输入旧密码，然后输入新密码\"><a href=\"#passwd用于在命令行修改密码，使用这个命令会要求你先输入旧密码，然后输入新密码\" class=\"headerlink\" title=\"passwd用于在命令行修改密码，使用这个命令会要求你先输入旧密码，然后输入新密码\"></a>passwd用于在命令行修改密码，使用这个命令会要求你先输入旧密码，然后输入新密码</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ passwd</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"超级用户可以用这个命令修改其他用户的密码，这个时候不需要输入用户的密码\"><a href=\"#超级用户可以用这个命令修改其他用户的密码，这个时候不需要输入用户的密码\" class=\"headerlink\" title=\"超级用户可以用这个命令修改其他用户的密码，这个时候不需要输入用户的密码\"></a>超级用户可以用这个命令修改其他用户的密码，这个时候不需要输入用户的密码</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># passwd USERNAME</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"passwd还可以删除某个用户的密码，这个命令只有root用户才能操作，删除密码后，这个用户不需要输入密码就可以登录到系统\"><a href=\"#passwd还可以删除某个用户的密码，这个命令只有root用户才能操作，删除密码后，这个用户不需要输入密码就可以登录到系统\" class=\"headerlink\" title=\"passwd还可以删除某个用户的密码，这个命令只有root用户才能操作，删除密码后，这个用户不需要输入密码就可以登录到系统\"></a>passwd还可以删除某个用户的密码，这个命令只有root用户才能操作，删除密码后，这个用户不需要输入密码就可以登录到系统</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># passwd -d USERNAME</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"35-mkdir\"><a href=\"#35-mkdir\" class=\"headerlink\" title=\"35. mkdir\"></a>35. mkdir</h2><h3 id=\"在home目录下创建一个名为temp的目录\"><a href=\"#在home目录下创建一个名为temp的目录\" class=\"headerlink\" title=\"在home目录下创建一个名为temp的目录\"></a>在home目录下创建一个名为temp的目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mkdir ~&#x2F;temp</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-p选项可以创建一个路径上所有不存在的目录\"><a href=\"#使用-p选项可以创建一个路径上所有不存在的目录\" class=\"headerlink\" title=\"使用-p选项可以创建一个路径上所有不存在的目录\"></a>使用-p选项可以创建一个路径上所有不存在的目录</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mkdir -p dir1&#x2F;dir2&#x2F;dir3&#x2F;dir4&#x2F;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"36-ifconfig\"><a href=\"#36-ifconfig\" class=\"headerlink\" title=\"36. ifconfig\"></a>36. ifconfig</h2><p>ifconfig用于查看和配置Linux系统的网络接口</p>\n<h3 id=\"查看所有网络接口及其状态\"><a href=\"#查看所有网络接口及其状态\" class=\"headerlink\" title=\"查看所有网络接口及其状态\"></a>查看所有网络接口及其状态</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ifconfig -a</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用up和down命令启动或停止某个接口\"><a href=\"#使用up和down命令启动或停止某个接口\" class=\"headerlink\" title=\"使用up和down命令启动或停止某个接口\"></a>使用up和down命令启动或停止某个接口</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ifconfig eth0 up</span><br><span class=\"line\"></span><br><span class=\"line\">$ ifconfig eth0 down</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/03/ifconfig-7-examples-to-configure-network-interface/\" target=\"_blank\" rel=\"noopener\">Ifconfig: 7 Examples To Configure Network Interface</a></p>\n<h2 id=\"37-uname\"><a href=\"#37-uname\" class=\"headerlink\" title=\"37. uname\"></a>37. uname</h2><h3 id=\"uname可以显示一些重要的系统信息，例如内核名称、主机名、内核版本号、处理器类型之类的信息\"><a href=\"#uname可以显示一些重要的系统信息，例如内核名称、主机名、内核版本号、处理器类型之类的信息\" class=\"headerlink\" title=\"uname可以显示一些重要的系统信息，例如内核名称、主机名、内核版本号、处理器类型之类的信息\"></a>uname可以显示一些重要的系统信息，例如内核名称、主机名、内核版本号、处理器类型之类的信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ uname -a</span><br><span class=\"line\">Linux john-laptop 2.6.32-24-generic #41-Ubuntu SMP Thu Aug 19 01:12:52 UTC 2010 i686 GNU&#x2F;Linux</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"38-whereis\"><a href=\"#38-whereis\" class=\"headerlink\" title=\"38. whereis\"></a>38. whereis</h2><h3 id=\"当你不知道某个命令的位置时可以使用whereis命令，下面使用whereis查找ls的位置\"><a href=\"#当你不知道某个命令的位置时可以使用whereis命令，下面使用whereis查找ls的位置\" class=\"headerlink\" title=\"当你不知道某个命令的位置时可以使用whereis命令，下面使用whereis查找ls的位置\"></a>当你不知道某个命令的位置时可以使用whereis命令，下面使用whereis查找ls的位置</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ whereis ls</span><br><span class=\"line\">ls: &#x2F;bin&#x2F;ls &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;ls.1.gz &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1p&#x2F;ls.1p.gz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"当你想查找某个可执行程序的位置，但这个程序又不在whereis的默认目录下，你可以使用-B选项，并指定目录作为这个选项的参数。下面的命令在-tmp目录下查找lsmk命令\"><a href=\"#当你想查找某个可执行程序的位置，但这个程序又不在whereis的默认目录下，你可以使用-B选项，并指定目录作为这个选项的参数。下面的命令在-tmp目录下查找lsmk命令\" class=\"headerlink\" title=\"当你想查找某个可执行程序的位置，但这个程序又不在whereis的默认目录下，你可以使用-B选项，并指定目录作为这个选项的参数。下面的命令在/tmp目录下查找lsmk命令\"></a>当你想查找某个可执行程序的位置，但这个程序又不在whereis的默认目录下，你可以使用-B选项，并指定目录作为这个选项的参数。下面的命令在/tmp目录下查找lsmk命令</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ whereis -u -B &#x2F;tmp -f lsmk</span><br><span class=\"line\">lsmk: &#x2F;tmp&#x2F;lsmk</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"39-whatis\"><a href=\"#39-whatis\" class=\"headerlink\" title=\"39. whatis\"></a>39. whatis</h2><h3 id=\"wathis显示某个命令的描述信息\"><a href=\"#wathis显示某个命令的描述信息\" class=\"headerlink\" title=\"wathis显示某个命令的描述信息\"></a>wathis显示某个命令的描述信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ whatis ls</span><br><span class=\"line\">ls\t\t(1)  - list directory contents</span><br><span class=\"line\"></span><br><span class=\"line\">$ whatis ifconfig</span><br><span class=\"line\">ifconfig (8)         - configure a network interface</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"40-locate\"><a href=\"#40-locate\" class=\"headerlink\" title=\"40. locate\"></a>40. locate</h2><p>locate命名可以显示某个指定文件（或一组文件）的路径，它会使用由updatedb创建的数据库</p>\n<h3 id=\"下面的命令会显示系统中所有包含crontab字符串的文件\"><a href=\"#下面的命令会显示系统中所有包含crontab字符串的文件\" class=\"headerlink\" title=\"下面的命令会显示系统中所有包含crontab字符串的文件\"></a>下面的命令会显示系统中所有包含crontab字符串的文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ locate crontab</span><br><span class=\"line\">&#x2F;etc&#x2F;anacrontab</span><br><span class=\"line\">&#x2F;etc&#x2F;crontab</span><br><span class=\"line\">&#x2F;usr&#x2F;bin&#x2F;crontab</span><br><span class=\"line\">&#x2F;usr&#x2F;share&#x2F;doc&#x2F;cron&#x2F;examples&#x2F;crontab2english.pl.gz</span><br><span class=\"line\">&#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;crontab.1.gz</span><br><span class=\"line\">&#x2F;usr&#x2F;share&#x2F;man&#x2F;man5&#x2F;anacrontab.5.gz</span><br><span class=\"line\">&#x2F;usr&#x2F;share&#x2F;man&#x2F;man5&#x2F;crontab.5.gz</span><br><span class=\"line\">&#x2F;usr&#x2F;share&#x2F;vim&#x2F;vim72&#x2F;syntax&#x2F;crontab.vim</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"41-man\"><a href=\"#41-man\" class=\"headerlink\" title=\"41. man\"></a>41. man</h2><h3 id=\"显示某个命令的man页面\"><a href=\"#显示某个命令的man页面\" class=\"headerlink\" title=\"显示某个命令的man页面\"></a>显示某个命令的man页面</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ man crontab</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"有些命令可能会有多个man页面，每个man页面对应一种命令类型\"><a href=\"#有些命令可能会有多个man页面，每个man页面对应一种命令类型\" class=\"headerlink\" title=\"有些命令可能会有多个man页面，每个man页面对应一种命令类型\"></a>有些命令可能会有多个man页面，每个man页面对应一种命令类型</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ man SECTION-NUMBER commandname</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"man页面一般可以分为8种命令类型\"><a href=\"#man页面一般可以分为8种命令类型\" class=\"headerlink\" title=\"man页面一般可以分为8种命令类型\"></a>man页面一般可以分为8种命令类型</h3><ol>\n<li>用户命令</li>\n<li>系统调用</li>\n<li>c库函数</li>\n<li>设备与网络接口</li>\n<li>文件格式</li>\n<li>游戏与屏保</li>\n<li>环境、表、宏</li>\n<li>系统管理员命令和后台运行命令</li>\n</ol>\n<p>例如，我们执行 <code>whatis crontab</code>，你可以看到 <code>crontab</code> 有两个命令类型1和5，所以我们可以通过下面的命令查看命令类型5的man页面</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ whatis crontab</span><br><span class=\"line\">crontab (1)          - maintain crontab files for individual users (V3)</span><br><span class=\"line\">crontab (5)          - tables for driving cron</span><br><span class=\"line\"></span><br><span class=\"line\">$ man 5 crontab</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"42-tail\"><a href=\"#42-tail\" class=\"headerlink\" title=\"42. tail\"></a>42. tail</h2><h3 id=\"tail命令默认显示文件最后的10行文本\"><a href=\"#tail命令默认显示文件最后的10行文本\" class=\"headerlink\" title=\"tail命令默认显示文件最后的10行文本\"></a>tail命令默认显示文件最后的10行文本</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ tail filename.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"你可以使用-n选项指定要显示的行数\"><a href=\"#你可以使用-n选项指定要显示的行数\" class=\"headerlink\" title=\"你可以使用-n选项指定要显示的行数\"></a>你可以使用-n选项指定要显示的行数</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ tail -n N filename.txt</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"你也可以使用-f选项进行实时查看，这个命令执行后会等待，如果有新行添加到文件尾部，它会继续输出新的行，在查看日志时这个选项会非常有用。你可以通过CTRL-C终止命令的执行\"><a href=\"#你也可以使用-f选项进行实时查看，这个命令执行后会等待，如果有新行添加到文件尾部，它会继续输出新的行，在查看日志时这个选项会非常有用。你可以通过CTRL-C终止命令的执行\" class=\"headerlink\" title=\"你也可以使用-f选项进行实时查看，这个命令执行后会等待，如果有新行添加到文件尾部，它会继续输出新的行，在查看日志时这个选项会非常有用。你可以通过CTRL-C终止命令的执行\"></a>你也可以使用-f选项进行实时查看，这个命令执行后会等待，如果有新行添加到文件尾部，它会继续输出新的行，在查看日志时这个选项会非常有用。你可以通过CTRL-C终止命令的执行</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ tail -f log-file</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/09/multitail-to-view-tail-f-output-of-multiple-log-files-in-one-terminal/\" target=\"_blank\" rel=\"noopener\">3 Methods To View tail -f output of Multiple Log Files in One Terminal</a></p>\n<h2 id=\"43-less\"><a href=\"#43-less\" class=\"headerlink\" title=\"43. less\"></a>43. less</h2><h3 id=\"这个命名可以在不加载整个文件的前提下显示文件内容，在查看大型日志文件的时候这个命令会非常有用\"><a href=\"#这个命名可以在不加载整个文件的前提下显示文件内容，在查看大型日志文件的时候这个命令会非常有用\" class=\"headerlink\" title=\"这个命名可以在不加载整个文件的前提下显示文件内容，在查看大型日志文件的时候这个命令会非常有用\"></a>这个命名可以在不加载整个文件的前提下显示文件内容，在查看大型日志文件的时候这个命令会非常有用</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ less huge-log-file.log</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"当你用less命令打开某个文件时，下面两个按键会给你带来很多帮助，他们用于向前和向后滚屏\"><a href=\"#当你用less命令打开某个文件时，下面两个按键会给你带来很多帮助，他们用于向前和向后滚屏\" class=\"headerlink\" title=\"当你用less命令打开某个文件时，下面两个按键会给你带来很多帮助，他们用于向前和向后滚屏\"></a>当你用less命令打开某个文件时，下面两个按键会给你带来很多帮助，他们用于向前和向后滚屏</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">CTRL+F – forward one window</span><br><span class=\"line\">CTRL+B – backward one window</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2010/02/unix-less-command-10-tips-for-effective-navigation/\" target=\"_blank\" rel=\"noopener\">Unix Less Command: 10 Tips for Effective Navigation</a></p>\n<h2 id=\"44-su\"><a href=\"#44-su\" class=\"headerlink\" title=\"44. su\"></a>44. su</h2><h3 id=\"su命令用于切换用户账号，超级用户使用这个命令可以切换到任何其他用户而不用输入密码\"><a href=\"#su命令用于切换用户账号，超级用户使用这个命令可以切换到任何其他用户而不用输入密码\" class=\"headerlink\" title=\"su命令用于切换用户账号，超级用户使用这个命令可以切换到任何其他用户而不用输入密码\"></a>su命令用于切换用户账号，超级用户使用这个命令可以切换到任何其他用户而不用输入密码</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ su - USERNAME</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用另外一个用户名执行一个命令下面的示例中用户john使用raj用户名执行ls命令，执行完后返回john的账号\"><a href=\"#用另外一个用户名执行一个命令下面的示例中用户john使用raj用户名执行ls命令，执行完后返回john的账号\" class=\"headerlink\" title=\"用另外一个用户名执行一个命令下面的示例中用户john使用raj用户名执行ls命令，执行完后返回john的账号\"></a>用另外一个用户名执行一个命令下面的示例中用户john使用raj用户名执行ls命令，执行完后返回john的账号</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">[john@dev-server]$ su - raj -c &#39;ls&#39;</span><br><span class=\"line\">[john@dev-server]$</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用指定用户登录，并且使用指定的shell程序，而不用默认的\"><a href=\"#用指定用户登录，并且使用指定的shell程序，而不用默认的\" class=\"headerlink\" title=\"用指定用户登录，并且使用指定的shell程序，而不用默认的\"></a>用指定用户登录，并且使用指定的shell程序，而不用默认的</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ su -s &#39;SHELLNAME&#39; USERNAME</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"45-mysql\"><a href=\"#45-mysql\" class=\"headerlink\" title=\"45. mysql\"></a>45. mysql</h2><p>mysql可能是Linux上使用最广泛的数据库，即使你没有在你的服务器上安装mysql，你也可以使用mysql客户端连接到远程的mysql服务器</p>\n<h3 id=\"连接一个远程数据库，需要输入密码\"><a href=\"#连接一个远程数据库，需要输入密码\" class=\"headerlink\" title=\"连接一个远程数据库，需要输入密码\"></a>连接一个远程数据库，需要输入密码</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mysql -u root -p -h 192.168.1.2</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"连接本地数据库\"><a href=\"#连接本地数据库\" class=\"headerlink\" title=\"连接本地数据库\"></a>连接本地数据库</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ mysql -u root -p</span><br></pre></td></tr></table></figure>\n\n<p>你也可以在命令行中输入数据库密码，只需要在-p后面加上密码作为参数，可以直接写在p后面而不用加空格</p>\n<h2 id=\"46-yum\"><a href=\"#46-yum\" class=\"headerlink\" title=\"46. yum\"></a>46. yum</h2><h3 id=\"使用yum安装apache\"><a href=\"#使用yum安装apache\" class=\"headerlink\" title=\"使用yum安装apache\"></a>使用yum安装apache</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yum install httpd</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"更新apache\"><a href=\"#更新apache\" class=\"headerlink\" title=\"更新apache\"></a>更新apache</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yum update httpd</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"卸载-删除apache\"><a href=\"#卸载-删除apache\" class=\"headerlink\" title=\"卸载/删除apache\"></a>卸载/删除apache</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ yum remove httpd</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"47-rpm\"><a href=\"#47-rpm\" class=\"headerlink\" title=\"47. rpm\"></a>47. rpm</h2><h3 id=\"使用rpm安装apache\"><a href=\"#使用rpm安装apache\" class=\"headerlink\" title=\"使用rpm安装apache\"></a>使用rpm安装apache</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># rpm -ivh httpd-2.2.3-22.0.1.el5.i386.rpm</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"更新apache-1\"><a href=\"#更新apache-1\" class=\"headerlink\" title=\"更新apache\"></a>更新apache</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># rpm -uvh httpd-2.2.3-22.0.1.el5.i386.rpm</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"卸载-删除apache-1\"><a href=\"#卸载-删除apache-1\" class=\"headerlink\" title=\"卸载/删除apache\"></a>卸载/删除apache</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># rpm -ev httpd</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2010/07/rpm-command-examples/\" target=\"_blank\" rel=\"noopener\">RPM Command: 15 Examples to Install, Uninstall, Upgrade, Query RPM Packages</a></p>\n<h2 id=\"48-ping\"><a href=\"#48-ping\" class=\"headerlink\" title=\"48. ping\"></a>48. ping</h2><h3 id=\"ping一个远程主机，只发5个数据包\"><a href=\"#ping一个远程主机，只发5个数据包\" class=\"headerlink\" title=\"ping一个远程主机，只发5个数据包\"></a>ping一个远程主机，只发5个数据包</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ping -c 5 gmail.com</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：<a href=\"http://www.thegeekstuff.com/2009/11/ping-tutorial-13-effective-ping-command-examples/\" target=\"_blank\" rel=\"noopener\">Ping Tutorial: 15 Effective Ping Command Examples</a></p>\n<h2 id=\"49-date\"><a href=\"#49-date\" class=\"headerlink\" title=\"49. date\"></a>49. date</h2><h3 id=\"设置系统日期\"><a href=\"#设置系统日期\" class=\"headerlink\" title=\"设置系统日期\"></a>设置系统日期</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># date -s &quot;01&#x2F;31&#x2F;2010 23:59:53&quot;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"当你修改了系统时间，你需要同步硬件时间和系统时间\"><a href=\"#当你修改了系统时间，你需要同步硬件时间和系统时间\" class=\"headerlink\" title=\"当你修改了系统时间，你需要同步硬件时间和系统时间\"></a>当你修改了系统时间，你需要同步硬件时间和系统时间</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\"># hwclock –systohc</span><br><span class=\"line\"># hwclock --systohc –utc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"50-wget\"><a href=\"#50-wget\" class=\"headerlink\" title=\"50. wget\"></a>50. wget</h2><h3 id=\"使用wget从网上下载软件、音乐、视频\"><a href=\"#使用wget从网上下载软件、音乐、视频\" class=\"headerlink\" title=\"使用wget从网上下载软件、音乐、视频\"></a>使用wget从网上下载软件、音乐、视频</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ wget http:&#x2F;&#x2F;prdownloads.sourceforge.net&#x2F;sourceforge&#x2F;nagios&#x2F;nagios-3.2.1.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"下载文件并以指定的文件名保存文件\"><a href=\"#下载文件并以指定的文件名保存文件\" class=\"headerlink\" title=\"下载文件并以指定的文件名保存文件\"></a>下载文件并以指定的文件名保存文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ wget -O taglist.zip http:&#x2F;&#x2F;www.vim.org&#x2F;scripts&#x2F;download_script.php?src_id&#x3D;7701</span><br></pre></td></tr></table></figure>\n\n<p>更多示例：[The Ultimate Wget Download Guide With 15 Awesome Examples](</p>\n","categories":["linux"],"tags":["linux基础"]}]